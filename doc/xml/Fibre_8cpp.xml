<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="Fibre_8cpp" kind="file">
    <compoundname>Fibre.cpp</compoundname>
    <includes refid="Fibre_8h" local="yes">Fibre.h</includes>
    <includes refid="Connection_8h" local="yes">components/Connection.h</includes>
    <includes refid="Cluster_8h" local="yes">Cluster.h</includes>
    <incdepgraph>
      <node id="2309">
        <label>list</label>
      </node>
      <node id="2292">
        <label>boost/shared_ptr.hpp</label>
      </node>
      <node id="2330">
        <label>boost/serialization/vector.hpp</label>
      </node>
      <node id="2323">
        <label>boost/tokenizer.hpp</label>
      </node>
      <node id="2305">
        <label>ActivityTimer.h</label>
        <link refid="ActivityTimer_8h"/>
        <childnode refid="2306" relation="include">
        </childnode>
      </node>
      <node id="2317">
        <label>spacial/Point.h</label>
      </node>
      <node id="2301">
        <label>Node.h</label>
        <link refid="Node_8h"/>
        <childnode refid="2302" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2316" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2318" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
        <childnode refid="2312" relation="include">
        </childnode>
      </node>
      <node id="2332">
        <label>manager/PatternDatabaseObject.h</label>
        <link refid="PatternDatabaseObject_8h"/>
        <childnode refid="2319" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
      </node>
      <node id="2314">
        <label>boost/uuid/uuid_io.hpp</label>
      </node>
      <node id="2313">
        <label>common/Connector.h</label>
        <link refid="Connector_8h"/>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2312" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2314" relation="include">
        </childnode>
        <childnode refid="2315" relation="include">
        </childnode>
      </node>
      <node id="2291">
        <label>gmpxx.h</label>
      </node>
      <node id="2289">
        <label>common/TimeKeeper.h</label>
        <link refid="TimeKeeper_8h"/>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2293" relation="include">
        </childnode>
        <childnode refid="2294" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2296" relation="include">
        </childnode>
      </node>
      <node id="2304">
        <label>ActivityTimerDistance.h</label>
        <link refid="ActivityTimerDistance_8h"/>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
      </node>
      <node id="2307">
        <label>common/Debuggable.h</label>
      </node>
      <node id="2285">
        <label>/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp</label>
        <link refid="Fibre.cpp"/>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2333" relation="include">
        </childnode>
      </node>
      <node id="2319">
        <label>DatabaseObject.h</label>
        <link refid="DatabaseObject_8h"/>
        <childnode refid="2312" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2321" relation="include">
        </childnode>
        <childnode refid="2322" relation="include">
        </childnode>
        <childnode refid="2323" relation="include">
        </childnode>
      </node>
      <node id="2320">
        <label>string</label>
      </node>
      <node id="2325">
        <label>PatternTag.h</label>
        <link refid="PatternTag_8h"/>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
      </node>
      <node id="2286">
        <label>Fibre.h</label>
        <link refid="Fibre_8h"/>
        <childnode refid="2287" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2324" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
      </node>
      <node id="2312">
        <label>map</label>
      </node>
      <node id="2308">
        <label>common/Tagged.h</label>
      </node>
      <node id="2336">
        <label>structures/NodeMesh.h</label>
        <link refid="NodeMesh_8h"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2312" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
      </node>
      <node id="2311">
        <label>DataObject.h</label>
        <link refid="DataObject_8h"/>
        <childnode refid="2312" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
      </node>
      <node id="2306">
        <label>ostream</label>
      </node>
      <node id="2287">
        <label>components/ConnectionMap.h</label>
        <link refid="ConnectionMap_8h"/>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2289" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
      </node>
      <node id="2328">
        <label>boost/serialization/string.hpp</label>
      </node>
      <node id="2333">
        <label>Cluster.h</label>
        <link refid="Cluster_8h"/>
        <childnode refid="2334" relation="include">
        </childnode>
        <childnode refid="2287" relation="include">
        </childnode>
        <childnode refid="2335" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2336" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
      </node>
      <node id="2295">
        <label>boost/timer.hpp</label>
      </node>
      <node id="2288">
        <label>common/KeyMappedCollection.h</label>
      </node>
      <node id="2294">
        <label>boost/date_time/posix_time/posix_time.hpp</label>
      </node>
      <node id="2297">
        <label>state/ActivityPattern.h</label>
        <link refid="ActivityPattern_8h"/>
        <childnode refid="2298" relation="include">
        </childnode>
      </node>
      <node id="2335">
        <label>spacial/Spacial.h</label>
      </node>
      <node id="2310">
        <label>dataobjects/DataObjectController.h</label>
        <link refid="DataObjectController_8h"/>
        <childnode refid="2311" relation="include">
        </childnode>
      </node>
      <node id="2298">
        <label>common/SimpleCollection.h</label>
      </node>
      <node id="2327">
        <label>vector</label>
      </node>
      <node id="2331">
        <label>boost/uuid/uuid_generators.hpp</label>
      </node>
      <node id="2334">
        <label>components/NodeMap.h</label>
        <link refid="NodeMap_8h"/>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
      </node>
      <node id="2321">
        <label>sstream</label>
      </node>
      <node id="2316">
        <label>common/Defs.h</label>
      </node>
      <node id="2315">
        <label>common/Misc.h</label>
      </node>
      <node id="2296">
        <label>time.h</label>
      </node>
      <node id="2322">
        <label>iostream</label>
      </node>
      <node id="2293">
        <label>boost/serialization/shared_ptr.hpp</label>
      </node>
      <node id="2303">
        <label>Impulse.h</label>
        <link refid="Impulse_8h"/>
        <childnode refid="2304" relation="include">
        </childnode>
        <childnode refid="2298" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2289" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
      </node>
      <node id="2318">
        <label>manager/NodeDatabaseObject.h</label>
        <link refid="NodeDatabaseObject_8h"/>
        <childnode refid="2319" relation="include">
        </childnode>
        <childnode refid="2317" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2321" relation="include">
        </childnode>
      </node>
      <node id="2290">
        <label>common/Cycle.h</label>
        <link refid="Cycle_8h"/>
        <childnode refid="2291" relation="include">
        </childnode>
      </node>
      <node id="2299">
        <label>boost/uuid/uuid.hpp</label>
      </node>
      <node id="2329">
        <label>boost/serialization/serialization.hpp</label>
      </node>
      <node id="2324">
        <label>state/Pattern.h</label>
        <link refid="Pattern_8h"/>
        <childnode refid="2325" relation="include">
        </childnode>
        <childnode refid="2326" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2330" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2331" relation="include">
        </childnode>
        <childnode refid="2332" relation="include">
        </childnode>
      </node>
      <node id="2326">
        <label>BinaryString.h</label>
        <link refid="BinaryString_8h"/>
        <childnode refid="2309" relation="include">
        </childnode>
        <childnode refid="2320" relation="include">
        </childnode>
        <childnode refid="2321" relation="include">
        </childnode>
        <childnode refid="2327" relation="include">
        </childnode>
        <childnode refid="2328" relation="include">
        </childnode>
        <childnode refid="2329" relation="include">
        </childnode>
      </node>
      <node id="2300">
        <label>Connection.h</label>
        <link refid="Connection_8h"/>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2313" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2319" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
      </node>
      <node id="2302">
        <label>ImpulseCollection.h</label>
        <link refid="ImpulseCollection_8h"/>
        <childnode refid="2303" relation="include">
        </childnode>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2312" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacecryomesh">cryomesh</innernamespace>
    <innernamespace refid="namespacecryomesh_1_1structures">cryomesh::structures</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Fibre.cpp</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>15<sp/>Feb<sp/>2011</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>niall</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Fibre_8h" kindref="compound">Fibre.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Connection_8h" kindref="compound">components/Connection.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Cluster_8h" kindref="compound">Cluster.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIBRE_DEBUG</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;common/Misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">cryomesh<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">structures<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" refkind="member"><highlight class="normal"><ref refid="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" kindref="member" tooltip="Construct a fibre between two clusters with width.">Fibre::Fibre</ref>(boost::shared_ptr&lt;Cluster&gt;<sp/>inputCluster,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>outputCluster,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width)<sp/>:<sp/>connector(),<sp/>connections(),<sp/><sp/>fibreType(<ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member" tooltip="Enum representing the type of this Fibre connection.">FibreType</ref>::NullFibre){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" kindref="member" tooltip="Reset and create a number of connections in this Fibre.">createConnections</ref>(width);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" kindref="member" tooltip="Connect all the connections in this Fibre to a cluster of a specified type.">connectAllConnections</ref>(inputCluster,<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" kindref="member">InputCluster</ref>);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" kindref="member" tooltip="Connect all the connections in this Fibre to a cluster of a specified type.">connectAllConnections</ref>(outputCluster,<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" kindref="member">OutputCluster</ref>);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputCluster-&gt;getUUID()<sp/>==<sp/>outputCluster-&gt;getUUID())<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" kindref="member" tooltip="Set the type of this fibre.">setType</ref>(<ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4abb9c562751800615ea00d21c6d1a0dfe" kindref="member">LoopbackFibre</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" kindref="member" tooltip="Set the type of this fibre.">setType</ref>(<ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a69d28022ab4829994a47b285abbbbf1e" kindref="member">IntermediateFibre</ref>);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="classcryomesh_1_1structures_1_1Fibre_1a50d4c7cf2f29d5e27acc057c89eecd84" refkind="member"><highlight class="normal"><ref refid="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" kindref="member" tooltip="Construct a fibre between two clusters with width.">Fibre::Fibre</ref>(boost::shared_ptr&lt;Cluster&gt;<sp/>cluster,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member" tooltip="Enum representing the type of this Fibre connection.">FibreType</ref><sp/>&amp;<sp/>tp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width)<sp/><sp/>:<sp/>connector(),<sp/>connections(),<sp/><sp/>fibreType(tp)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" kindref="member" tooltip="Set the type of this fibre.">setType</ref>(tp);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" kindref="member" tooltip="Reset and create a number of connections in this Fibre.">createConnections</ref>(width);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" kindref="member" tooltip="Get the type of the fibre.">getType</ref>()<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a04c484accec936ca5b35fed02fd3affd" kindref="member">PrimaryInputFibre</ref>)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" kindref="member" tooltip="Connect all the connections in this Fibre to a cluster of a specified type.">connectAllConnections</ref>(cluster,<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" kindref="member">OutputCluster</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" kindref="member" tooltip="Get the type of the fibre.">getType</ref>()<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a09e0e43a8d02ccfe05dfe8c0b5cce1c6" kindref="member">PrimaryOutputFibre</ref>)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" kindref="member" tooltip="Connect all the connections in this Fibre to a cluster of a specified type.">connectAllConnections</ref>(cluster,<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" kindref="member">InputCluster</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="classcryomesh_1_1structures_1_1Fibre_1a84a116f316383898b03fb7844dbf8d81" refkind="member"><highlight class="normal"><ref refid="classcryomesh_1_1structures_1_1Fibre_1a84a116f316383898b03fb7844dbf8d81" kindref="member" tooltip="Default destructor.">Fibre::~Fibre</ref>()<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" kindref="member" tooltip="Disconnect all the connections from clusters.">disconnectAllConnections</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classcryomesh_1_1structures_1_1Fibre_1a1f0b3b6c97d353acc172da31ad9af99f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1f0b3b6c97d353acc172da31ad9af99f" kindref="member" tooltip="Update all elements.">Fibre::update</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIBRE_DEBUG</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre::update:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>all<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.<ref refid="classcryomesh_1_1components_1_1ConnectionMap_1aadb06c43b0eae37154fd7efb22a08949" kindref="member" tooltip="Update all entries in the map.">update</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" kindref="member" tooltip="Send impulses to the connections based on a complete trigger of all of them.">Fibre::trigger</ref>()<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;boost::shared_ptr&lt;components::Impulse&gt;<sp/>&gt;<sp/>all_impulses;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" kindref="member" tooltip="Get the connections.">getConnections</ref>().getSize();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_impulses.push_back(<ref refid="classcryomesh_1_1components_1_1Impulse_1ae88e7ff0cacf1ca6f323f66c97819c7a" kindref="member" tooltip="Get a &amp;#39;trigger&amp;#39; impulse, a maximum impulse.">components::Impulse::getTriggerImpulse</ref>());</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(all_impulses.size()<sp/>==<sp/>sz);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" kindref="member" tooltip="Send impulses to the connections based on a complete trigger of all of them.">trigger</ref>(all_impulses);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63" refid="classcryomesh_1_1structures_1_1Fibre_1a84e9a5f2fe92ddbecc8321ad4bddf9a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" kindref="member" tooltip="Send impulses to the connections based on a complete trigger of all of them.">Fibre::trigger</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>percentage)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clamp<sp/>as<sp/>percentage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>percent<sp/>=<sp/>std::min(percentage,<sp/>1.0);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>percent<sp/>=<sp/>std::max(0.0,<sp/>percent);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" kindref="member" tooltip="Send impulses to the connections based on a complete trigger of all of them.">trigger</ref>(<ref refid="classcryomesh_1_1state_1_1Pattern_1ad253bf9c3cb1997ce2f8db2ded5455ba" kindref="member" tooltip="Generate a random pattern of width.">state::Pattern::getRandom</ref>(this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a042a1f3fce5c5938eb229764a5754a0f" kindref="member" tooltip="Get width (number of connections) of fibre.">getWidth</ref>(),<sp/>percent));</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69" refid="classcryomesh_1_1structures_1_1Fibre_1afa6b0d36b541f7ab94d80de2d3222536" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" kindref="member" tooltip="Send impulses to the connections based on a complete trigger of all of them.">Fibre::trigger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref><sp/>&amp;<sp/>pattern)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;boost::shared_ptr&lt;components::Impulse&gt;<sp/>&gt;<sp/>all_impulses;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;<sp/>&amp;<sp/>all_bools<sp/>=<sp/>pattern.<ref refid="classcryomesh_1_1state_1_1Pattern_1ab6fe1d9bee48f3bdaffb0cf683de4d17" kindref="member">getPattern</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;::const_iterator<sp/>it_all_bools<sp/>=<sp/>all_bools.begin();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;::const_iterator<sp/>it_all_bools_end<sp/>=<sp/>all_bools.end();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;components::Impulse&gt;<sp/>null_pulse;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" kindref="member" tooltip="Get the connections.">getConnections</ref>().getSize();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_all_bools<sp/>!=<sp/>it_all_bools_end)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it_all_bools<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_impulses.push_back(<ref refid="classcryomesh_1_1components_1_1Impulse_1ae88e7ff0cacf1ca6f323f66c97819c7a" kindref="member" tooltip="Get a &amp;#39;trigger&amp;#39; impulse, a maximum impulse.">components::Impulse::getTriggerImpulse</ref>());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_impulses.push_back(null_pulse);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_all_bools;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(all_impulses.size()<sp/>==<sp/>sz);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" kindref="member" tooltip="Send impulses to the connections based on a complete trigger of all of them.">trigger</ref>(all_impulses);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classcryomesh_1_1structures_1_1Fibre_1a09cd16b434cac26865e349f09a59f874" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" kindref="member" tooltip="Send impulses to the connections based on a complete trigger of all of them.">Fibre::trigger</ref>(std::vector&lt;boost::shared_ptr&lt;components::Impulse&gt;<sp/>&gt;<sp/>&amp;<sp/>triggerImpulses)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;<sp/>&amp;<sp/>all_connections<sp/>=</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.getMutableCollection();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>trigger<sp/>impulse<sp/>are<sp/>short<sp/>then<sp/>pad</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;components::Impulse&gt;<sp/>null_pulse;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>diff<sp/>=<sp/>all_connections.size()<sp/>-<sp/>triggerImpulses.size();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>diff;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>triggerImpulses.push_back(null_pulse);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>all_connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;boost::shared_ptr&lt;components::Impulse&gt;<sp/>&gt;::iterator<sp/>it_triggerimpulses<sp/>=<sp/>triggerImpulses.begin();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::iterator<sp/>it_all_connections<sp/>=</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_connections.begin();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::const_iterator</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_all_connections_end<sp/>=<sp/>all_connections.end();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_all_connections<sp/>!=<sp/>it_all_connections_end)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it_triggerimpulses<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_all_connections-&gt;second-&gt;add(*it_triggerimpulses);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_all_connections;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_triggerimpulses;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1common_1_1Connector" kindref="compound">common::Connector&lt;Fibre, Cluster&gt;</ref><sp/>&amp;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" kindref="member" tooltip="Get the connector.">Fibre::getConnector</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" kindref="member">connector</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="classcryomesh_1_1structures_1_1Fibre_1ab38093272e6e7427b21bb6eb4ded1778" refkind="member"><highlight class="normal"><ref refid="classcryomesh_1_1common_1_1Connector" kindref="compound">common::Connector&lt;Fibre, Cluster&gt;</ref><sp/>&amp;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ab38093272e6e7427b21bb6eb4ded1778" kindref="member" tooltip="Get the mutable connector.">Fibre::getMutableConnector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" kindref="member">connector</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128" refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1components_1_1ConnectionMap" kindref="compound" tooltip="Helper class for ConnectionMap to KeyMappedCollection mapping.">components::ConnectionMap</ref><sp/>&amp;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" kindref="member" tooltip="Get the connections.">Fibre::getConnections</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="classcryomesh_1_1structures_1_1Fibre_1a9c35ba56c134e32142cc552e059419d0" refkind="member"><highlight class="normal"><ref refid="classcryomesh_1_1components_1_1ConnectionMap" kindref="compound" tooltip="Helper class for ConnectionMap to KeyMappedCollection mapping.">components::ConnectionMap</ref><sp/>&amp;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a9c35ba56c134e32142cc552e059419d0" kindref="member" tooltip="Get the mutable connections.">Fibre::getMutableConnections</ref>()<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member" tooltip="Enum representing the type of this Fibre connection.">Fibre::FibreType</ref><sp/>&amp;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" kindref="member" tooltip="Get the type of the fibre.">Fibre::getType</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1acfd2fc68d27c91742e0319b2a0db090a" kindref="member">fibreType</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" kindref="member" tooltip="Set the type of this fibre.">Fibre::setType</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member" tooltip="Enum representing the type of this Fibre connection.">Fibre::FibreType</ref><sp/>&amp;<sp/>tp)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1acfd2fc68d27c91742e0319b2a0db090a" kindref="member">fibreType</ref><sp/>=<sp/>tp;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classcryomesh_1_1structures_1_1Fibre_1a042a1f3fce5c5938eb229764a5754a0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a042a1f3fce5c5938eb229764a5754a0f" kindref="member" tooltip="Get width (number of connections) of fibre.">Fibre::getWidth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" kindref="member" tooltip="Get the connections.">getConnections</ref>().getSize();</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="classcryomesh_1_1structures_1_1Fibre_1aa4b6fd784dad6f0e0ac48b33ac0c574a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::pair&lt;int,<sp/>int&gt;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aa4b6fd784dad6f0e0ac48b33ac0c574a" kindref="member" tooltip="Count all connections of this fibre to a group of clusters.">Fibre::countConnections</ref>(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;<sp/>&amp;<sp/>all_clusters)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>output_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>all_clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_all_clusters<sp/>=</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_clusters.begin();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_all_clusters_end<sp/>=</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_clusters.end();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_all_clusters<sp/>!=<sp/>it_all_clusters_end)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;<sp/>Cluster<sp/>&gt;<sp/>cluster<sp/>=<sp/>it_all_clusters-&gt;second;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;<sp/>&amp;<sp/>inputclusters<sp/>=</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" kindref="member" tooltip="Get the connector.">getConnector</ref>().<ref refid="classcryomesh_1_1common_1_1Connector_1af294647fe03f03108b2edd81c11aaa0a" kindref="member" tooltip="Get all inputs.">getInputs</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;<sp/>&amp;<sp/>outputclusters<sp/>=</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" kindref="member" tooltip="Get the connector.">getConnector</ref>().<ref refid="classcryomesh_1_1common_1_1Connector_1af108b3bdc8adee1d2f6ce34c6b7781e6" kindref="member" tooltip="Get all outputs.">getOutputs</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_input_found<sp/>=</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputclusters.find(cluster-&gt;getUUID());</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_output_found<sp/>=</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputclusters.find(cluster-&gt;getUUID());</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_input_end<sp/>=</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputclusters.end();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_output_end<sp/>=</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputclusters.end();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>infound<sp/>=<sp/>it_input_found<sp/>!=<sp/>it_input_end;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>outfound<sp/>=<sp/>it_output_found<sp/>!=<sp/>it_output_end;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infound<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++input_count;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outfound<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++output_count;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_all_clusters;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;int,<sp/>int&gt;(input_count,<sp/>output_count);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189" refid="classcryomesh_1_1structures_1_1Fibre_1af32b67f092190a1a0b3dcc1b4156aaf0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1af32b67f092190a1a0b3dcc1b4156aaf0" kindref="member" tooltip="Return type of connection to cluster specified, null if none.">Fibre::isConnected</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&amp;<sp/>cluster)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cluster_type<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Fibre::isConnected:<sp/>&quot;&lt;&lt;common::Misc::print(std::cout,<sp/>cluster-&gt;getUUID())&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;Fibre::isConnected:<sp/>&quot;&lt;&lt;this-&gt;getConnector()&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;<sp/>&amp;<sp/>inputclusters<sp/>=<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" kindref="member" tooltip="Get the connector.">getConnector</ref>().<ref refid="classcryomesh_1_1common_1_1Connector_1af294647fe03f03108b2edd81c11aaa0a" kindref="member" tooltip="Get all inputs.">getInputs</ref>();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;<sp/>&amp;<sp/>outputclusters<sp/>=</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" kindref="member" tooltip="Get the connector.">getConnector</ref>().<ref refid="classcryomesh_1_1common_1_1Connector_1af108b3bdc8adee1d2f6ce34c6b7781e6" kindref="member" tooltip="Get all outputs.">getOutputs</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_input_found<sp/>=</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputclusters.find(cluster-&gt;getUUID());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_output_found<sp/>=</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputclusters.find(cluster-&gt;getUUID());</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_input_end<sp/>=<sp/>inputclusters.end();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;Cluster&gt;<sp/>&gt;::const_iterator<sp/>it_output_end<sp/>=</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputclusters.end();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>infound<sp/>=<sp/>it_input_found<sp/>!=<sp/>it_input_end;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>outfound<sp/>=<sp/>it_output_found<sp/>!=<sp/>it_output_end;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FIBRE_DEBUG</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Fibre::isConnected:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;infound:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;infound&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>outfound:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;outfound&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((infound<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(outfound<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>loopback<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster_type<sp/>=<sp/>cluster_type<sp/>|<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061add322fb6cff1b80f969b078c59f97fce" kindref="member">ClusterConnectionType::LoopbackCluster</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre::isConnected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;LoopbackCluster&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;getUUIDString()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;&lt;-&gt;&quot;</highlight><highlight class="normal">&lt;&lt;cluster-&gt;getUUIDString()<sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>(cluster_type:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;cluster_type&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(infound<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster_type<sp/>=<sp/>cluster_type<sp/>|<sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" kindref="member">ClusterConnectionType::InputCluster</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre::isConnected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;InputCluster&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;getUUIDString()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;&lt;-&quot;</highlight><highlight class="normal">&lt;&lt;cluster-&gt;getUUIDString()<sp/><sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>(cluster_type:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;cluster_type&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outfound<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cluster_type<sp/>=<sp/>cluster_type<sp/>|<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" kindref="member">ClusterConnectionType::OutputCluster</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre::isConnected:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OutputCluster&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;this-&gt;getUUIDString()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;-&gt;&quot;</highlight><highlight class="normal">&lt;&lt;cluster-&gt;getUUIDString()<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>(cluster_type:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;cluster_type&lt;&lt;</highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Fibre::isConnected:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cluster_type;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" kindref="member" tooltip="Reset and create a number of connections in this Fibre.">Fibre::createConnections</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disconnect<sp/>original<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" kindref="member" tooltip="Disconnect all the connections from clusters.">disconnectAllConnections</ref>();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.clear();</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//recreate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>number;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>tempcon(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1components_1_1Connection" kindref="compound" tooltip="Connection class to manage the transfer of Impulses between Nodes.">components::Connection</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.add(tempcon);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" kindref="member" tooltip="Disconnect all the connections from clusters.">Fibre::disconnectAllConnections</ref>()<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;<sp/>&amp;<sp/>allcons<sp/>=</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.getMutableCollection();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>allcons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::iterator<sp/>it_allcons<sp/>=<sp/>allcons.begin();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::const_iterator<sp/>it_allcons_end<sp/>=</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allcons.end();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_allcons<sp/>!=<sp/>it_allcons_end)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_allcons-&gt;second-&gt;getMutableConnector().disconnectAllInputs();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_allcons-&gt;second-&gt;getMutableConnector().disconnectAllOutputs();</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_allcons;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" kindref="member">connector</ref>.<ref refid="classcryomesh_1_1common_1_1Connector_1ae158782ad5bf70ce2913be421ace2e4d" kindref="member" tooltip="Disconnect all input units from this one.">disconnectAllInputs</ref>();</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" kindref="member">connector</ref>.<ref refid="classcryomesh_1_1common_1_1Connector_1afff7a004da2146ab0fca902204bd62ee" kindref="member" tooltip="Disconnect all Output units from this one.">disconnectAllOutputs</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" kindref="member" tooltip="Connect all the connections in this Fibre to a cluster of a specified type.">Fibre::connectAllConnections</ref>(boost::shared_ptr&lt;Cluster&gt;<sp/>cluster,<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061" kindref="member" tooltip="Enum representing the relation of a cluster to this fibre.">ClusterConnectionType</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>random<sp/>nodes<sp/>from<sp/>cluster</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.getSize();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;<sp/>&amp;<sp/>allconnections<sp/>=</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.getMutableCollection();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>nodehooks<sp/>=<sp/>cluster-&gt;getNodeMap().getRandomRange(width);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>nodehooks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::iterator<sp/>it_allconnections<sp/>=</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allconnections.begin();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::const_iterator</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_allconnections_end<sp/>=<sp/>allconnections.end();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::iterator<sp/>it_nodehooks<sp/>=<sp/>nodehooks.begin();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator<sp/>it_nodehooks_end<sp/>=<sp/>nodehooks.end();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_allconnections<sp/>!=<sp/>it_allconnections_end)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_nodehooks<sp/>==<sp/>it_nodehooks_end)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodehooks<sp/>=<sp/>nodehooks.begin();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" kindref="member">InputCluster</ref>)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it_nodehooks)-&gt;getMutableConnector().connectOutput(it_allconnections-&gt;second);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_allconnections-&gt;second-&gt;getMutableConnector().connectInput(*it_nodehooks);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" kindref="member">OutputCluster</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it_nodehooks)-&gt;getMutableConnector().connectInput(it_allconnections-&gt;second);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_allconnections-&gt;second-&gt;getMutableConnector().connectOutput(*it_nodehooks);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_allconnections;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodehooks;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" kindref="member">InputCluster</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" kindref="member">connector</ref>.<ref refid="classcryomesh_1_1common_1_1Connector_1aa8eab10d81bfa921ad1341ad1fbc9a4d" kindref="member" tooltip="Connect a unit to this one as an input.">connectInput</ref>(cluster);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" kindref="member">OutputCluster</ref>)<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" kindref="member">connector</ref>.<ref refid="classcryomesh_1_1common_1_1Connector_1a1fa0ff922e03cbb5654a2de468af9d41" kindref="member" tooltip="Connect a unit to this one as an output.">connectOutput</ref>(cluster);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302" refid="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" refkind="member"><highlight class="normal">boost::shared_ptr&lt;state::Pattern&gt;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" kindref="member" tooltip="Get current pattern for firing state of nodes.">Fibre::getNodesPattern</ref>(</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>all_nodes)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>all<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/>firing_pattern;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>all_nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator<sp/>it_all_nodes<sp/>=</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_nodes.begin();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator<sp/>it_all_nodes_end<sp/>=</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>all_nodes.end();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_all_nodes<sp/>!=<sp/>it_all_nodes_end)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>firing<sp/>state<sp/>is<sp/>positive<sp/>(Ignoring<sp/>negative<sp/>firing<sp/>states</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it_all_nodes-&gt;second-&gt;getLastActivationState()<sp/>==<sp/><ref refid="classcryomesh_1_1components_1_1Node_1a291becdd589b5bd338d5c0dd28199798af92c268dc627d5fed69c32d6f0d3d82e" kindref="member">components::Node::Positive</ref>)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firing_pattern.push_back(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firing_pattern.push_back(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++node_count;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_all_nodes;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>pattern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::shared_ptr&lt;state::Pattern&gt;<sp/>pattern(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref>(firing_pattern));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(pattern-&gt;getWidth()<sp/>==<sp/>node_count);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pattern;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classcryomesh_1_1structures_1_1Fibre_1ac636d911ba83b83898d8a84e9e1cc7d6" refkind="member"><highlight class="normal">boost::shared_ptr&lt;state::Pattern&gt;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac636d911ba83b83898d8a84e9e1cc7d6" kindref="member" tooltip="Get current pattern for firing state of input nodes to the fibre.">Fibre::getInputNodesPattern</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>all_nodes<sp/>=<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" kindref="member" tooltip="Get the map of input nodes to this fibre.">getInputNodes</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" kindref="member" tooltip="Get current pattern for firing state of nodes.">getNodesPattern</ref>(all_nodes);</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335" refid="classcryomesh_1_1structures_1_1Fibre_1a0db7ff1c4bb7520f10cb680b7bd9e89e" refkind="member"><highlight class="normal">boost::shared_ptr&lt;state::Pattern&gt;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a0db7ff1c4bb7520f10cb680b7bd9e89e" kindref="member" tooltip="Get current pattern for firing state of output nodes to the fibre.">Fibre::getOutputNodesPattern</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>all_nodes<sp/>=<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" kindref="member" tooltip="Get the map of output nodes to this fibre.">getOutputNodes</ref>();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" kindref="member" tooltip="Get current pattern for firing state of nodes.">getNodesPattern</ref>(all_nodes);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" kindref="member" tooltip="Get the map of input nodes to this fibre.">Fibre::getInputNodes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" kindref="member" tooltip="Get the map of nodes to this fibre.">getNodes</ref>(<ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" kindref="member">InputCluster</ref>));</highlight></codeline>
<codeline lineno="342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" kindref="member" tooltip="Get the map of output nodes to this fibre.">Fibre::getOutputNodes</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" kindref="member" tooltip="Get the map of nodes to this fibre.">getNodes</ref>(<ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" kindref="member">OutputCluster</ref>));</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" kindref="member" tooltip="Get the map of nodes to this fibre.">Fibre::getNodes</ref>(</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061" kindref="member" tooltip="Enum representing the relation of a cluster to this fibre.">ClusterConnectionType</ref><sp/>type)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>collected_nodes;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref>.getCollection().size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;<sp/>&amp;<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" kindref="member">connections</ref><sp/>=</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;connections.getCollection();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>connections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::const_iterator<sp/>it_connections<sp/>=</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connections.begin();</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Connection&gt;<sp/>&gt;::const_iterator</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_connections_end<sp/>=<sp/>connections.end();</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_connections<sp/>!=<sp/>it_connections_end)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>each<sp/>connection,<sp/>get<sp/>all<sp/>the<sp/>nodes<sp/>(in<sp/>practice<sp/>there<sp/>should<sp/>only<sp/>be<sp/>one)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" kindref="member">InputCluster</ref>)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>&amp;<sp/>nodes<sp/>=</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_connections-&gt;second-&gt;getConnector().getInputs();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator<sp/>it_nodes<sp/>=</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.begin();</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodes_end<sp/>=<sp/>nodes.end();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_nodes<sp/>!=<sp/>it_nodes_end)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collected_nodes[it_nodes-&gt;first]<sp/>=<sp/>it_nodes-&gt;second;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++node_count;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" kindref="member">OutputCluster</ref>)<sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>&amp;<sp/>nodes<sp/>=</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_connections-&gt;second-&gt;getConnector().getOutputs();</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator<sp/>it_nodes<sp/>=</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.begin();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodes_end<sp/>=<sp/>nodes.end();</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_nodes<sp/>!=<sp/>it_nodes_end)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>collected_nodes[it_nodes-&gt;first]<sp/>=<sp/>it_nodes-&gt;second;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++node_count;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre::getNodes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Ignoring<sp/>unknown<sp/>type&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_connections;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre::getNodes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>No<sp/>connections<sp/>in<sp/>fibre&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>collected_nodes;</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406" refid="classcryomesh_1_1structures_1_1Fibre_1aaaa3f6a37c969442df3934aa1b3a329d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1aaaa3f6a37c969442df3934aa1b3a329d" kindref="member" tooltip="Force fire input nodes using a pattern.">Fibre::forceFireInputNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref><sp/>&amp;<sp/>pattern)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" kindref="member" tooltip="Force fire nodes using a pattern.">forceFireNodes</ref>(pattern,<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" kindref="member" tooltip="Get the map of input nodes to this fibre.">getInputNodes</ref>());</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="classcryomesh_1_1structures_1_1Fibre_1a74a3909fe54fb569f60e1236c43c2eec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a74a3909fe54fb569f60e1236c43c2eec" kindref="member" tooltip="Force fire output nodes using a pattern.">Fibre::forceFireOutputNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref><sp/>&amp;<sp/>pattern)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" kindref="member" tooltip="Force fire nodes using a pattern.">forceFireNodes</ref>(pattern,<sp/>this-&gt;<ref refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" kindref="member" tooltip="Get the map of output nodes to this fibre.">getOutputNodes</ref>());</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" kindref="member" tooltip="Force fire nodes using a pattern.">Fibre::forceFireNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref><sp/>&amp;<sp/>pattern,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;<sp/>nodes)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pattern<sp/>should<sp/>be<sp/>the<sp/>same<sp/>size<sp/>as<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pat_sz<sp/>=<sp/>pattern.<ref refid="classcryomesh_1_1state_1_1Pattern_1a448d14d09a39d35182bef8169511faf8" kindref="member">getSize</ref>();</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes_sz<sp/>=<sp/>nodes.size();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pat_sz<sp/>!=<sp/>nodes_sz)<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre::forceFireNodes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>Pattern<sp/>and<sp/>Nodes<sp/>size<sp/>mismatch...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;pattern:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>pat_sz<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>nodes:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nodes_sz<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>forall<sp/>in<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;<sp/>pat_bool<sp/>=<sp/>pattern.<ref refid="classcryomesh_1_1state_1_1Pattern_1ab6fe1d9bee48f3bdaffb0cf683de4d17" kindref="member">getPattern</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;::const_iterator<sp/>it_pat_bool<sp/>=<sp/>pat_bool.begin();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;::const_iterator<sp/>it_pat_bool_end<sp/>=<sp/>pat_bool.end();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator<sp/>it_nodes<sp/>=<sp/>nodes.begin();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;boost::uuids::uuid,<sp/>boost::shared_ptr&lt;components::Node&gt;<sp/>&gt;::const_iterator<sp/>it_nodes_end<sp/>=</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes.end();</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it_nodes<sp/>!=<sp/>it_nodes_end<sp/>&amp;&amp;<sp/>it_pat_bool<sp/>!=<sp/>it_pat_bool_end)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*it_pat_bool<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodes-&gt;second-&gt;forceFire();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_pat_bool;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="classcryomesh_1_1structures_1_1Fibre_1a2ee7eb11f1777688fd2b3c5fcb5349f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre_1a2ee7eb11f1777688fd2b3c5fcb5349f3" kindref="member">Fibre::enableDebug</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>b){</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;setDebug(b);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449" refid="namespacecryomesh_1_1structures_1a5193b0012f22b1fd0663b95152c0347e" refkind="member"><highlight class="normal">std::ostream&amp;<sp/><ref refid="namespacecryomesh_1_1structures_1a2e1e77e062248b853cfcfc84d5451ca7" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound" tooltip="A Fibre is a collection of connections that connect one structure to another.">Fibre</ref><sp/>&amp;<sp/>obj)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fibre:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;obj.getUUIDString()&lt;&lt;</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">&lt;&lt;</highlight><highlight class="stringliteral">&quot;<sp/>size:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>obj.<ref refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" kindref="member" tooltip="Get the connections.">getConnections</ref>().getSize()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>*(obj.<ref refid="classcryomesh_1_1structures_1_1Fibre_1a0db7ff1c4bb7520f10cb680b7bd9e89e" kindref="member" tooltip="Get current pattern for firing state of output nodes to the fibre.">getOutputNodesPattern</ref>());</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os&lt;&lt;<sp/>obj.<ref refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" kindref="member" tooltip="Get the connections.">getConnections</ref>();</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight><highlight class="comment">//NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight><highlight class="comment">//NAMESPACE</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp"/>
  </compounddef>
</doxygen>
