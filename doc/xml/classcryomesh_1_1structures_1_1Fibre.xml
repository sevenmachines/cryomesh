<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classcryomesh_1_1structures_1_1Fibre" kind="class" prot="public">
    <compoundname>cryomesh::structures::Fibre</compoundname>
    <includes refid="Fibre_8h" local="no">Fibre.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061" prot="public" static="no">
        <name>ClusterConnectionType</name>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aabc802b96fdcb5b3652b911ba4b245dd" prot="public">
          <name>NullCluster</name>
          <initializer> 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" prot="public">
          <name>InputCluster</name>
          <initializer>2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" prot="public">
          <name>OutputCluster</name>
          <initializer>4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061add322fb6cff1b80f969b078c59f97fce" prot="public">
          <name>LoopbackCluster</name>
          <initializer>8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum representing the relation of a cluster to this fibre. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="33" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="enum" id="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" prot="public" static="no">
        <name>FibreType</name>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a75309eba2cce59260e4f3e51bae87447" prot="public">
          <name>NullFibre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a69d28022ab4829994a47b285abbbbf1e" prot="public">
          <name>IntermediateFibre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a04c484accec936ca5b35fed02fd3affd" prot="public">
          <name>PrimaryInputFibre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a09e0e43a8d02ccfe05dfe8c0b5cce1c6" prot="public">
          <name>PrimaryOutputFibre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4abb9c562751800615ea00d21c6d1a0dfe" prot="public">
          <name>LoopbackFibre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enum representing the type of this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> connection. </para>        </briefdescription>
        <detaileddescription>
<para>The type of this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="42" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" bodystart="42" bodyend="49"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" prot="private" static="no" mutable="no">
        <type><ref refid="classcryomesh_1_1common_1_1Connector" kindref="compound">common::Connector</ref>&lt; <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref>, <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt;</type>
        <definition>common::Connector&lt;Fibre, Cluster&gt; cryomesh::structures::Fibre::connector</definition>
        <argsstring></argsstring>
        <name>connector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="327" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" bodystart="327" bodyend="-1"/>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" compoundref="Fibre_8cpp" startline="260" endline="301">connectAllConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" compoundref="Fibre_8cpp" startline="242" endline="258">disconnectAllConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" compoundref="Fibre_8cpp" startline="121" endline="123">getConnector</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1ab38093272e6e7427b21bb6eb4ded1778" compoundref="Fibre_8cpp" startline="125" endline="127">getMutableConnector</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" prot="private" static="no" mutable="no">
        <type><ref refid="classcryomesh_1_1components_1_1ConnectionMap" kindref="compound">components::ConnectionMap</ref></type>
        <definition>components::ConnectionMap cryomesh::structures::Fibre::connections</definition>
        <argsstring></argsstring>
        <name>connections</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="334" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" bodystart="334" bodyend="-1"/>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" compoundref="Fibre_8cpp" startline="260" endline="301">connectAllConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" compoundref="Fibre_8cpp" startline="230" endline="240">createConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" compoundref="Fibre_8cpp" startline="242" endline="258">disconnectAllConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" compoundref="Fibre_8cpp" startline="128" endline="130">getConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a9c35ba56c134e32142cc552e059419d0" compoundref="Fibre_8cpp" startline="132" endline="134">getMutableConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" compoundref="Fibre_8cpp" startline="348" endline="404">getNodes</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a09cd16b434cac26865e349f09a59f874" compoundref="Fibre_8cpp" startline="90" endline="119">trigger</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a1f0b3b6c97d353acc172da31ad9af99f" compoundref="Fibre_8cpp" startline="46" endline="52">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classcryomesh_1_1structures_1_1Fibre_1acfd2fc68d27c91742e0319b2a0db090a" prot="private" static="no" mutable="no">
        <type><ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member">FibreType</ref></type>
        <definition>FibreType cryomesh::structures::Fibre::fibreType</definition>
        <argsstring></argsstring>
        <name>fibreType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="341" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" bodystart="341" bodyend="-1"/>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" compoundref="Fibre_8cpp" startline="136" endline="138">getType</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" compoundref="Fibre_8cpp" startline="140" endline="142">setType</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cryomesh::structures::Fibre::Fibre</definition>
        <argsstring>(boost::shared_ptr&lt; Cluster &gt; inputCluster, boost::shared_ptr&lt; Cluster &gt; outputCluster, int width)</argsstring>
        <name>Fibre</name>
        <param>
          <type>boost::shared_ptr&lt; <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt;</type>
          <declname>inputCluster</declname>
        </param>
        <param>
          <type>boost::shared_ptr&lt; <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt;</type>
          <declname>outputCluster</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Construct a fibre between two clusters with width. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boost::shared_ptr&lt;Cluster&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>The input cluster to this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>boost::shared_ptr&lt;Cluster&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>The output cluster to this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the fibre connection to create </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="61" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="20" bodyend="30"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" compoundref="Fibre_8cpp" startline="260" endline="301">connectAllConnections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" compoundref="Fibre_8cpp" startline="230" endline="240">createConnections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" compoundref="Fibre_8h" startline="35">InputCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a69d28022ab4829994a47b285abbbbf1e" compoundref="Fibre_8h" startline="44">IntermediateFibre</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4abb9c562751800615ea00d21c6d1a0dfe" compoundref="Fibre_8h" startline="47">LoopbackFibre</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" compoundref="Fibre_8h" startline="36">OutputCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" compoundref="Fibre_8cpp" startline="140" endline="142">setType</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a50d4c7cf2f29d5e27acc057c89eecd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cryomesh::structures::Fibre::Fibre</definition>
        <argsstring>(boost::shared_ptr&lt; Cluster &gt; cluster, const FibreType &amp;type, int width)</argsstring>
        <name>Fibre</name>
        <param>
          <type>boost::shared_ptr&lt; <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt;</type>
          <declname>cluster</declname>
        </param>
        <param>
          <type>const <ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member">FibreType</ref> &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Construct a primary fibre with width. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boost::shared_ptr&lt;Cluster&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>cluster <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> to connect to fibre </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>FibreType &amp; type Type of fibre connection to make </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>width Width of fibre to create</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new fibre created, possible null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="76" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="32" bodyend="40"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" compoundref="Fibre_8cpp" startline="260" endline="301">connectAllConnections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" compoundref="Fibre_8cpp" startline="230" endline="240">createConnections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" compoundref="Fibre_8cpp" startline="136" endline="138">getType</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" compoundref="Fibre_8h" startline="35">InputCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" compoundref="Fibre_8h" startline="36">OutputCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a04c484accec936ca5b35fed02fd3affd" compoundref="Fibre_8h" startline="45">PrimaryInputFibre</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a09e0e43a8d02ccfe05dfe8c0b5cce1c6" compoundref="Fibre_8h" startline="46">PrimaryOutputFibre</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" compoundref="Fibre_8cpp" startline="140" endline="142">setType</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a84a116f316383898b03fb7844dbf8d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>cryomesh::structures::Fibre::~Fibre</definition>
        <argsstring>()</argsstring>
        <name>~Fibre</name>
        <briefdescription>
<para>Default destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="81" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="42" bodyend="44"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" compoundref="Fibre_8cpp" startline="242" endline="258">disconnectAllConnections</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a1f0b3b6c97d353acc172da31ad9af99f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
<para>Update all elements. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="86" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="46" bodyend="52"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
        <references refid="classcryomesh_1_1components_1_1ConnectionMap_1aadb06c43b0eae37154fd7efb22a08949" compoundref="ConnectionMap_8h" startline="43" endline="57">cryomesh::components::ConnectionMap::update</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a84e9a5f2fe92ddbecc8321ad4bddf9a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::trigger</definition>
        <argsstring>(double percentage)</argsstring>
        <name>trigger</name>
        <param>
          <type>double</type>
          <declname>percentage</declname>
        </param>
        <briefdescription>
<para>Trigger a random pattern with percentage of the connections to fire. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>Fraction of connection to trigger randomly </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="94" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="63" bodyend="68"/>
        <references refid="classcryomesh_1_1state_1_1Pattern_1ad253bf9c3cb1997ce2f8db2ded5455ba" compoundref="Pattern_8cpp" startline="21" endline="28">cryomesh::state::Pattern::getRandom</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a042a1f3fce5c5938eb229764a5754a0f" compoundref="Fibre_8cpp" startline="144" endline="146">getWidth</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" compoundref="Fibre_8cpp" startline="54" endline="62">trigger</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::trigger</definition>
        <argsstring>()</argsstring>
        <name>trigger</name>
        <briefdescription>
<para>Send impulses to the connections based on a complete trigger of all of them. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="99" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="54" bodyend="62"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" compoundref="Fibre_8cpp" startline="128" endline="130">getConnections</references>
        <references refid="classcryomesh_1_1components_1_1Impulse_1ae88e7ff0cacf1ca6f323f66c97819c7a" compoundref="Impulse_8cpp" startline="33" endline="36">cryomesh::components::Impulse::getTriggerImpulse</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a84e9a5f2fe92ddbecc8321ad4bddf9a3" compoundref="Fibre_8cpp" startline="63" endline="68">trigger</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1afa6b0d36b541f7ab94d80de2d3222536" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::trigger</definition>
        <argsstring>(const state::Pattern &amp;pattern)</argsstring>
        <name>trigger</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref> &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Send impulses to the connections based on a pattern. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>&amp; pattern The pattern to use to create impulses and send to connections </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="107" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="69" bodyend="88"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" compoundref="Fibre_8cpp" startline="128" endline="130">getConnections</references>
        <references refid="classcryomesh_1_1state_1_1Pattern_1ab6fe1d9bee48f3bdaffb0cf683de4d17" compoundref="Pattern_8cpp" startline="133" endline="135">cryomesh::state::Pattern::getPattern</references>
        <references refid="classcryomesh_1_1components_1_1Impulse_1ae88e7ff0cacf1ca6f323f66c97819c7a" compoundref="Impulse_8cpp" startline="33" endline="36">cryomesh::components::Impulse::getTriggerImpulse</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" compoundref="Fibre_8cpp" startline="54" endline="62">trigger</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a09cd16b434cac26865e349f09a59f874" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::trigger</definition>
        <argsstring>(std::vector&lt; boost::shared_ptr&lt; components::Impulse &gt; &gt; &amp;triggerImpulses)</argsstring>
        <name>trigger</name>
        <param>
          <type>std::vector&lt; boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">components::Impulse</ref> &gt; &gt; &amp;</type>
          <declname>triggerImpulses</declname>
        </param>
        <briefdescription>
<para>Send impulses to the connections. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>std::vector&lt;boost::shared_ptr&lt; components::Impulse &gt; &gt; &amp; triggerImpulses The impulses to send to connections </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="115" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="90" bodyend="119"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcryomesh_1_1common_1_1Connector" kindref="compound">common::Connector</ref>&lt; <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref>, <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt; &amp;</type>
        <definition>const common::Connector&lt; Fibre, Cluster &gt; &amp; cryomesh::structures::Fibre::getConnector</definition>
        <argsstring>() const </argsstring>
        <name>getConnector</name>
        <briefdescription>
<para>Get the connector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>common::Connector&lt;Fibre, Cluster&gt; &amp; The connector object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="123" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="121" bodyend="123"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" compoundref="Fibre_8h" startline="327">connector</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1aa4b6fd784dad6f0e0ac48b33ac0c574a" compoundref="Fibre_8cpp" startline="148" endline="188">countConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1af32b67f092190a1a0b3dcc1b4156aaf0" compoundref="Fibre_8cpp" startline="189" endline="228">isConnected</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1ab38093272e6e7427b21bb6eb4ded1778" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcryomesh_1_1common_1_1Connector" kindref="compound">common::Connector</ref>&lt; <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref>, <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt; &amp;</type>
        <definition>common::Connector&lt; Fibre, Cluster &gt; &amp; cryomesh::structures::Fibre::getMutableConnector</definition>
        <argsstring>()</argsstring>
        <name>getMutableConnector</name>
        <briefdescription>
<para>Get the mutable connector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>common::Connector&lt;Fibre, Cluster&gt; The connector object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="131" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="125" bodyend="127"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" compoundref="Fibre_8h" startline="327">connector</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcryomesh_1_1components_1_1ConnectionMap" kindref="compound">components::ConnectionMap</ref> &amp;</type>
        <definition>const components::ConnectionMap &amp; cryomesh::structures::Fibre::getConnections</definition>
        <argsstring>() const </argsstring>
        <name>getConnections</name>
        <briefdescription>
<para>Get the connections. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcryomesh_1_1components_1_1ConnectionMap" kindref="compound">components::ConnectionMap</ref> The connection map for this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="139" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="128" bodyend="130"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a042a1f3fce5c5938eb229764a5754a0f" compoundref="Fibre_8cpp" startline="144" endline="146">getWidth</referencedby>
        <referencedby refid="namespacecryomesh_1_1structures_1a5193b0012f22b1fd0663b95152c0347e" compoundref="Fibre_8cpp" startline="449" endline="454">cryomesh::structures::operator&lt;&lt;</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" compoundref="Fibre_8cpp" startline="54" endline="62">trigger</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a9c35ba56c134e32142cc552e059419d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcryomesh_1_1components_1_1ConnectionMap" kindref="compound">components::ConnectionMap</ref> &amp;</type>
        <definition>components::ConnectionMap &amp; cryomesh::structures::Fibre::getMutableConnections</definition>
        <argsstring>()</argsstring>
        <name>getMutableConnections</name>
        <briefdescription>
<para>Get the mutable connections. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classcryomesh_1_1components_1_1ConnectionMap" kindref="compound">components::ConnectionMap</ref> The mutable connection map for this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="147" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="132" bodyend="134"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member">FibreType</ref> &amp;</type>
        <definition>const Fibre::FibreType &amp; cryomesh::structures::Fibre::getType</definition>
        <argsstring>() const </argsstring>
        <name>getType</name>
        <briefdescription>
<para>Get the type of the fibre. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>FibreType The type of the fibre connection </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="155" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="136" bodyend="138"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1acfd2fc68d27c91742e0319b2a0db090a" compoundref="Fibre_8h" startline="341">fibreType</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a50d4c7cf2f29d5e27acc057c89eecd84" compoundref="Fibre_8cpp" startline="32" endline="40">Fibre</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1aa4b6fd784dad6f0e0ac48b33ac0c574a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::pair&lt; int, int &gt;</type>
        <definition>const std::pair&lt; int, int &gt; cryomesh::structures::Fibre::countConnections</definition>
        <argsstring>(const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Cluster &gt; &gt; &amp;all_clusters) const </argsstring>
        <name>countConnections</name>
        <param>
          <type>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt; &gt; &amp;</type>
          <declname>all_clusters</declname>
        </param>
        <briefdescription>
<para>Count all connections of this fibre to a group of clusters. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::map&lt;boost::uuids::uuid</parametername>
<parametername>boost::shared_ptr&lt;Cluster&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>&gt; <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> collection to search for connections to this fibre</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::pair&lt;int, int&gt; Pair of input/output connection count to this fibre within the supplied cluster collection </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="166" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="148" bodyend="188"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" compoundref="Fibre_8cpp" startline="121" endline="123">getConnector</references>
        <references refid="classcryomesh_1_1common_1_1Connector_1af294647fe03f03108b2edd81c11aaa0a" compoundref="Connector_8h" startline="524" endline="526">cryomesh::common::Connector&lt; U, T &gt;::getInputs</references>
        <references refid="classcryomesh_1_1common_1_1Connector_1af108b3bdc8adee1d2f6ce34c6b7781e6" compoundref="Connector_8h" startline="577" endline="579">cryomesh::common::Connector&lt; U, T &gt;::getOutputs</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1af32b67f092190a1a0b3dcc1b4156aaf0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int cryomesh::structures::Fibre::isConnected</definition>
        <argsstring>(const boost::shared_ptr&lt; Cluster &gt; &amp;cluster) const </argsstring>
        <name>isConnected</name>
        <param>
          <type>const boost::shared_ptr&lt; <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt; &amp;</type>
          <declname>cluster</declname>
        </param>
        <briefdescription>
<para>Return type of connection to cluster specified, null if none. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boost::shared_ptr&lt;Cluster&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>cluster Check connection to this cluster</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>const ClusterConnectionType &amp; Connection type to cluster, Null if none </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="177" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="189" bodyend="228"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" compoundref="Fibre_8cpp" startline="121" endline="123">getConnector</references>
        <references refid="classcryomesh_1_1common_1_1Connector_1af294647fe03f03108b2edd81c11aaa0a" compoundref="Connector_8h" startline="524" endline="526">cryomesh::common::Connector&lt; U, T &gt;::getInputs</references>
        <references refid="classcryomesh_1_1common_1_1Connector_1af108b3bdc8adee1d2f6ce34c6b7781e6" compoundref="Connector_8h" startline="577" endline="579">cryomesh::common::Connector&lt; U, T &gt;::getOutputs</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" compoundref="Fibre_8h" startline="35">InputCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061add322fb6cff1b80f969b078c59f97fce" compoundref="Fibre_8h" startline="36">LoopbackCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" compoundref="Fibre_8h" startline="36">OutputCluster</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a042a1f3fce5c5938eb229764a5754a0f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int cryomesh::structures::Fibre::getWidth</definition>
        <argsstring>() const </argsstring>
        <name>getWidth</name>
        <briefdescription>
<para>Get width (number of connections) of fibre. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>unsigned int Width of fibre </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="185" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="144" bodyend="146"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" compoundref="Fibre_8cpp" startline="128" endline="130">getConnections</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a84e9a5f2fe92ddbecc8321ad4bddf9a3" compoundref="Fibre_8cpp" startline="63" endline="68">trigger</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::shared_ptr&lt; <ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref> &gt;</type>
        <definition>boost::shared_ptr&lt; state::Pattern &gt; cryomesh::structures::Fibre::getNodesPattern</definition>
        <argsstring>(const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; all_nodes) const </argsstring>
        <name>getNodesPattern</name>
        <param>
          <type>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Node" kindref="compound">components::Node</ref> &gt; &gt;</type>
          <declname>all_nodes</declname>
        </param>
        <briefdescription>
<para>Get current pattern for firing state of nodes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;components::Node&gt; &gt; The nodes to check for firing pattern</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>boost::shared_ptr&lt; state::Pattern &gt; The current firing pattern of the input nodes to the fibre </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="197" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="302" bodyend="329"/>
        <references refid="classcryomesh_1_1components_1_1Node_1a291becdd589b5bd338d5c0dd28199798af92c268dc627d5fed69c32d6f0d3d82e" compoundref="Node_8h" startline="46">cryomesh::components::Node::Positive</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1ac636d911ba83b83898d8a84e9e1cc7d6" compoundref="Fibre_8cpp" startline="331" endline="334">getInputNodesPattern</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a0db7ff1c4bb7520f10cb680b7bd9e89e" compoundref="Fibre_8cpp" startline="335" endline="338">getOutputNodesPattern</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1ac636d911ba83b83898d8a84e9e1cc7d6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::shared_ptr&lt; <ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref> &gt;</type>
        <definition>boost::shared_ptr&lt; state::Pattern &gt; cryomesh::structures::Fibre::getInputNodesPattern</definition>
        <argsstring>() const </argsstring>
        <name>getInputNodesPattern</name>
        <briefdescription>
<para>Get current pattern for firing state of input nodes to the fibre. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>boost::shared_ptr&lt; state::Pattern &gt; The current firing pattern of the input nodes to the fibre </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="205" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="331" bodyend="334"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" compoundref="Fibre_8cpp" startline="340" endline="342">getInputNodes</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" compoundref="Fibre_8cpp" startline="302" endline="329">getNodesPattern</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a0db7ff1c4bb7520f10cb680b7bd9e89e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>boost::shared_ptr&lt; <ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref> &gt;</type>
        <definition>boost::shared_ptr&lt; state::Pattern &gt; cryomesh::structures::Fibre::getOutputNodesPattern</definition>
        <argsstring>() const </argsstring>
        <name>getOutputNodesPattern</name>
        <briefdescription>
<para>Get current pattern for firing state of output nodes to the fibre. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>boost::shared_ptr&lt; state::Pattern &gt; The current firing pattern of the output nodes to the fibre </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="213" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="335" bodyend="338"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" compoundref="Fibre_8cpp" startline="302" endline="329">getNodesPattern</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" compoundref="Fibre_8cpp" startline="344" endline="346">getOutputNodes</references>
        <referencedby refid="namespacecryomesh_1_1structures_1a5193b0012f22b1fd0663b95152c0347e" compoundref="Fibre_8cpp" startline="449" endline="454">cryomesh::structures::operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Node" kindref="compound">components::Node</ref> &gt; &gt;</type>
        <definition>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; cryomesh::structures::Fibre::getNodes</definition>
        <argsstring>(const ClusterConnectionType type) const </argsstring>
        <name>getNodes</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061" kindref="member">ClusterConnectionType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Get the map of nodes to this fibre. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ClusterConnectionType</parametername>
</parameternamelist>
<parameterdescription>
<para>The cluster to get the nodes from, eg, InputCluster means get the input nodes</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::map&lt;boost::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; The map of nodes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="224" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="348" bodyend="404"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" compoundref="Fibre_8h" startline="35">InputCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" compoundref="Fibre_8h" startline="36">OutputCluster</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" compoundref="Fibre_8cpp" startline="340" endline="342">getInputNodes</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" compoundref="Fibre_8cpp" startline="344" endline="346">getOutputNodes</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Node" kindref="compound">components::Node</ref> &gt; &gt;</type>
        <definition>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; cryomesh::structures::Fibre::getInputNodes</definition>
        <argsstring>() const </argsstring>
        <name>getInputNodes</name>
        <briefdescription>
<para>Get the map of input nodes to this fibre. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::map&lt;boost::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; The map of input nodes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="232" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="340" bodyend="342"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" compoundref="Fibre_8cpp" startline="348" endline="404">getNodes</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" compoundref="Fibre_8h" startline="35">InputCluster</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1aaaa3f6a37c969442df3934aa1b3a329d" compoundref="Fibre_8cpp" startline="406" endline="408">forceFireInputNodes</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1ac636d911ba83b83898d8a84e9e1cc7d6" compoundref="Fibre_8cpp" startline="331" endline="334">getInputNodesPattern</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Node" kindref="compound">components::Node</ref> &gt; &gt;</type>
        <definition>const std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; cryomesh::structures::Fibre::getOutputNodes</definition>
        <argsstring>() const </argsstring>
        <name>getOutputNodes</name>
        <briefdescription>
<para>Get the map of output nodes to this fibre. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::map&lt;boost::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; The map of output nodes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="240" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="344" bodyend="346"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" compoundref="Fibre_8cpp" startline="348" endline="404">getNodes</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" compoundref="Fibre_8h" startline="36">OutputCluster</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a74a3909fe54fb569f60e1236c43c2eec" compoundref="Fibre_8cpp" startline="410" endline="412">forceFireOutputNodes</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a0db7ff1c4bb7520f10cb680b7bd9e89e" compoundref="Fibre_8cpp" startline="335" endline="338">getOutputNodesPattern</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1aaaa3f6a37c969442df3934aa1b3a329d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::forceFireInputNodes</definition>
        <argsstring>(const state::Pattern &amp;pattern)</argsstring>
        <name>forceFireInputNodes</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref> &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Force fire input nodes using a pattern. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to fire </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="248" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="406" bodyend="408"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" compoundref="Fibre_8cpp" startline="414" endline="443">forceFireNodes</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" compoundref="Fibre_8cpp" startline="340" endline="342">getInputNodes</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a74a3909fe54fb569f60e1236c43c2eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::forceFireOutputNodes</definition>
        <argsstring>(const state::Pattern &amp;pattern)</argsstring>
        <name>forceFireOutputNodes</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref> &amp;</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
<para>Force fire output nodes using a pattern. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to fire </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="256" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="410" bodyend="412"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" compoundref="Fibre_8cpp" startline="414" endline="443">forceFireNodes</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" compoundref="Fibre_8cpp" startline="344" endline="346">getOutputNodes</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::forceFireNodes</definition>
        <argsstring>(const state::Pattern &amp;pattern, std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; components::Node &gt; &gt; nodes)</argsstring>
        <name>forceFireNodes</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1state_1_1Pattern" kindref="compound">state::Pattern</ref> &amp;</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Node" kindref="compound">components::Node</ref> &gt; &gt;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>Force fire nodes using a pattern. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The pattern to fire </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>std::map&lt;boost::uuids::uuid</parametername>
<parametername>boost::shared_ptr&lt;components::Node&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>&gt; The nodes to fire the pattern on </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="267" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="414" bodyend="443"/>
        <references refid="classcryomesh_1_1state_1_1Pattern_1ab6fe1d9bee48f3bdaffb0cf683de4d17" compoundref="Pattern_8cpp" startline="133" endline="135">cryomesh::state::Pattern::getPattern</references>
        <references refid="classcryomesh_1_1state_1_1Pattern_1a448d14d09a39d35182bef8169511faf8" compoundref="Pattern_8cpp" startline="155" endline="157">cryomesh::state::Pattern::getSize</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1aaaa3f6a37c969442df3934aa1b3a329d" compoundref="Fibre_8cpp" startline="406" endline="408">forceFireInputNodes</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a74a3909fe54fb569f60e1236c43c2eec" compoundref="Fibre_8cpp" startline="410" endline="412">forceFireOutputNodes</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a2ee7eb11f1777688fd2b3c5fcb5349f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::enableDebug</definition>
        <argsstring>(bool b)</argsstring>
        <name>enableDebug</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="268" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="445" bodyend="447"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcryomesh_1_1structures_1_1Fibre_1a7dca0c0b433cc87d41580076ca31a419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const Fibre &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Get the activity pattern of the <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref>, 0 for no activity, 1 otherwise. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pattern To stream operator</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::ostream</parametername>
</parameternamelist>
<parameterdescription>
<para>&amp; os The output stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> &amp; obj The object to stream</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream &amp; The output stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="287" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="449" bodyend="454"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::setType</definition>
        <argsstring>(const FibreType &amp;tp)</argsstring>
        <name>setType</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" kindref="member">FibreType</ref> &amp;</type>
          <declname>tp</declname>
        </param>
        <briefdescription>
<para>Set the type of this fibre. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>FibreType &amp; tp The type of this fibre </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="296" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="140" bodyend="142"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1acfd2fc68d27c91742e0319b2a0db090a" compoundref="Fibre_8h" startline="341">fibreType</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" compoundref="Fibre_8cpp" startline="20" endline="30">Fibre</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::createConnections</definition>
        <argsstring>(int number)</argsstring>
        <name>createConnections</name>
        <param>
          <type>int</type>
          <declname>number</declname>
        </param>
        <briefdescription>
<para>Reset and create a number of connections in this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int</parametername>
</parameternamelist>
<parameterdescription>
<para>number Number of connections to create </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="304" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="230" bodyend="240"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" compoundref="Fibre_8cpp" startline="242" endline="258">disconnectAllConnections</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" compoundref="Fibre_8cpp" startline="20" endline="30">Fibre</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::disconnectAllConnections</definition>
        <argsstring>()</argsstring>
        <name>disconnectAllConnections</name>
        <briefdescription>
<para>Disconnect all the connections from clusters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="309" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="242" bodyend="258"/>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" compoundref="Fibre_8h" startline="327">connector</references>
        <references refid="classcryomesh_1_1common_1_1Connector_1ae158782ad5bf70ce2913be421ace2e4d" compoundref="Connector_8h" startline="332" endline="346">cryomesh::common::Connector&lt; U, T &gt;::disconnectAllInputs</references>
        <references refid="classcryomesh_1_1common_1_1Connector_1afff7a004da2146ab0fca902204bd62ee" compoundref="Connector_8h" startline="500" endline="514">cryomesh::common::Connector&lt; U, T &gt;::disconnectAllOutputs</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" compoundref="Fibre_8cpp" startline="230" endline="240">createConnections</referencedby>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a84a116f316383898b03fb7844dbf8d81" compoundref="Fibre_8cpp" startline="42" endline="44">~Fibre</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::structures::Fibre::connectAllConnections</definition>
        <argsstring>(boost::shared_ptr&lt; Cluster &gt; cluster, ClusterConnectionType type)</argsstring>
        <name>connectAllConnections</name>
        <param>
          <type>boost::shared_ptr&lt; <ref refid="classcryomesh_1_1structures_1_1Cluster" kindref="compound">Cluster</ref> &gt;</type>
          <declname>cluster</declname>
        </param>
        <param>
          <type><ref refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061" kindref="member">ClusterConnectionType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Connect all the connections in this <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> to a cluster of a specified type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>boost::shared_ptr&lt;Cluster&gt;</parametername>
</parameternamelist>
<parameterdescription>
<para>cluster The cluster to connect to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ClusterConnectionType</parametername>
</parameternamelist>
<parameterdescription>
<para>type The type of cluster we&apos;re connecting to </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="319" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.cpp" bodystart="260" bodyend="301"/>
        <references refid="classcryomesh_1_1common_1_1Connector_1aa8eab10d81bfa921ad1341ad1fbc9a4d" compoundref="Connector_8h" startline="53" endline="61">cryomesh::common::Connector&lt; U, T &gt;::connectInput</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" compoundref="Fibre_8h" startline="334">connections</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" compoundref="Fibre_8h" startline="327">connector</references>
        <references refid="classcryomesh_1_1common_1_1Connector_1a1fa0ff922e03cbb5654a2de468af9d41" compoundref="Connector_8h" startline="122" endline="130">cryomesh::common::Connector&lt; U, T &gt;::connectOutput</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" compoundref="Fibre_8h" startline="35">InputCluster</references>
        <references refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" compoundref="Fibre_8h" startline="36">OutputCluster</references>
        <referencedby refid="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" compoundref="Fibre_8cpp" startline="20" endline="30">Fibre</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="classcryomesh_1_1structures_1_1Fibre" kindref="compound">Fibre</ref> is a collection of connections that connect one structure to another. </para>    </briefdescription>
    <detaileddescription>
<para>For example, two clusters. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="424">
        <label>cryomesh::components::ConnectionMap</label>
        <link refid="classcryomesh_1_1components_1_1ConnectionMap"/>
      </node>
      <node id="423">
        <label>cryomesh::structures::Fibre</label>
        <link refid="classcryomesh_1_1structures_1_1Fibre"/>
        <childnode refid="424" relation="usage">
          <edgelabel>connections</edgelabel>
        </childnode>
        <childnode refid="425" relation="usage">
          <edgelabel>connector</edgelabel>
        </childnode>
      </node>
      <node id="426">
        <label>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Cluster &gt; &gt;</label>
      </node>
      <node id="425">
        <label>cryomesh::common::Connector&lt; Fibre, Cluster &gt;</label>
        <link refid="classcryomesh_1_1common_1_1Connector"/>
        <childnode refid="426" relation="usage">
          <edgelabel>minputs</edgelabel>
          <edgelabel>moutputs</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" line="27" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/structures/Fibre.h" bodystart="27" bodyend="342"/>
    <listofallmembers>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>ClusterConnectionType</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a9d1f47fb7ce5c18234054fcee35fd42b" prot="protected" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>connectAllConnections</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1ac6b2267d1a4b1532345988eb29e55850" prot="private" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>connections</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a13214170b78c57278f800c82f2a063f7" prot="private" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>connector</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aa4b6fd784dad6f0e0ac48b33ac0c574a" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>countConnections</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a2db9a8137da4294c38fc12028bce2d20" prot="protected" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>createConnections</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1adb26abfba4fa239f8606afb71f6f7d61" prot="protected" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>disconnectAllConnections</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a2ee7eb11f1777688fd2b3c5fcb5349f3" prot="public" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>enableDebug</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a03d3ec68b23d465e802f85bbd989550f" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>Fibre</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a50d4c7cf2f29d5e27acc057c89eecd84" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>Fibre</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>FibreType</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1acfd2fc68d27c91742e0319b2a0db090a" prot="private" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>fibreType</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aaaa3f6a37c969442df3934aa1b3a329d" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>forceFireInputNodes</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a5e2e81cc368683f575a573416d4a4a09" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>forceFireNodes</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a74a3909fe54fb569f60e1236c43c2eec" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>forceFireOutputNodes</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a95dbfb506308cab9c4d763f2dff66311" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getConnections</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aac08e0b13a4baffd2c74d8d1a3351072" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getConnector</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a638dce6d194d2e30ce10fc1694c589b4" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getInputNodes</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1ac636d911ba83b83898d8a84e9e1cc7d6" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getInputNodesPattern</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a9c35ba56c134e32142cc552e059419d0" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getMutableConnections</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1ab38093272e6e7427b21bb6eb4ded1778" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getMutableConnector</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1ab4cd1906788d648c47db0675cdf19e22" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getNodes</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a690dd19606a0611d57cb70cd33810969" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getNodesPattern</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1abd4b9cfb1609c78328c68f0328305da6" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getOutputNodes</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a0db7ff1c4bb7520f10cb680b7bd9e89e" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getOutputNodesPattern</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1ab1a8a60a116108041a1efea8fd6c35e7" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getType</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a042a1f3fce5c5938eb229764a5754a0f" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>getWidth</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061a6ba67168d6814daae19c08e089b9221e" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>InputCluster</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a69d28022ab4829994a47b285abbbbf1e" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>IntermediateFibre</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1af32b67f092190a1a0b3dcc1b4156aaf0" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>isConnected</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061add322fb6cff1b80f969b078c59f97fce" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>LoopbackCluster</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4abb9c562751800615ea00d21c6d1a0dfe" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>LoopbackFibre</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aabc802b96fdcb5b3652b911ba4b245dd" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>NullCluster</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a75309eba2cce59260e4f3e51bae87447" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>NullFibre</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a7dca0c0b433cc87d41580076ca31a419" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>operator&lt;&lt;</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a1bae341ec1ee07bdc7855b287bee2061aa7d846663457afd6da1e28d201f62656" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>OutputCluster</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a04c484accec936ca5b35fed02fd3affd" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>PrimaryInputFibre</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1aecbba6d46a76f888b3722491b674f5e4a09e0e43a8d02ccfe05dfe8c0b5cce1c6" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>PrimaryOutputFibre</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1acdde6519103d56cb26d2c1274122622b" prot="protected" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>setType</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a84e9a5f2fe92ddbecc8321ad4bddf9a3" prot="public" virt="non-virtual"><scope>cryomesh::structures::Fibre</scope><name>trigger</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1ac92cf661269915725e52f33b02ec05c7" prot="public" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>trigger</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1afa6b0d36b541f7ab94d80de2d3222536" prot="public" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>trigger</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a09cd16b434cac26865e349f09a59f874" prot="public" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>trigger</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a1f0b3b6c97d353acc172da31ad9af99f" prot="public" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>update</name></member>
      <member refid="classcryomesh_1_1structures_1_1Fibre_1a84a116f316383898b03fb7844dbf8d81" prot="public" virt="virtual"><scope>cryomesh::structures::Fibre</scope><name>~Fibre</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
