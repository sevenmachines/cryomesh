<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="classcryomesh_1_1components_1_1ImpulseCollection" kind="class" prot="public">
    <compoundname>cryomesh::components::ImpulseCollection</compoundname>
    <basecompoundref refid="classcryomesh_1_1dataobjects_1_1DataObjectController" prot="public" virt="non-virtual">cryomesh::dataobjects::DataObjectController&lt; unsigned long int, double &gt;</basecompoundref>
    <includes refid="ImpulseCollection_8h" local="no">ImpulseCollection.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285d" prot="public" static="no">
        <name>Comparison</name>
        <enumvalue id="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da5288e1792a76693414517164a2289ec8" prot="public">
          <name>GreaterThan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da049307d079370521e85998e7141ec3af" prot="public">
          <name>LessThan</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da591330a7a512ed11c4429536a5d1e6d5" prot="public">
          <name>EqualTo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da1402ae2e51bdcd9c25fae0dbb70e0b7a" prot="public">
          <name>NotEqualTo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285dabb82adff3882cdd74faaef695b6bc82d" prot="public">
          <name>LessThanOrEqualTo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da5c716b8625dde68ad195d063f37be1d1" prot="public">
          <name>GreaterThanOrEqualTo</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="38" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" bodystart="38" bodyend="40"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a230de3cb1f60f8eba8a53237af529ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>cryomesh::components::ImpulseCollection::ImpulseCollection</definition>
        <argsstring>()</argsstring>
        <name>ImpulseCollection</name>
        <briefdescription>
<para>Contructor for <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Contruct using default Mesh </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="46" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a91bdcfc982090f9c665d5d8b80b8d3b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>cryomesh::components::ImpulseCollection::~ImpulseCollection</definition>
        <argsstring>()</argsstring>
        <name>~ImpulseCollection</name>
        <briefdescription>
<para>Destructor for <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="53" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="22" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1ac9f6be8ecad07258e2c7b25efaa3df70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double cryomesh::components::ImpulseCollection::getActivity</definition>
        <argsstring>(common::Cycle cycle) const </argsstring>
        <name>getActivity</name>
        <param>
          <type><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></type>
          <declname>cycle</declname>
        </param>
        <briefdescription>
<para>Get activity at cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Sum all the Impulses in the collection on specified cycle and return activity</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>cycle The cycle to calculate the activity on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double The activity on specified cycle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="67" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="25" bodyend="49"/>
        <referencedby refid="classcryomesh_1_1components_1_1Node_1a07c29936e9a695e32365708f8c381456" compoundref="Node_8cpp" startline="267" endline="269">cryomesh::components::Node::getActivity</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1acf0a767c00f141a2caee02a36aea6569" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double cryomesh::components::ImpulseCollection::getActivity</definition>
        <argsstring>() const </argsstring>
        <name>getActivity</name>
        <briefdescription>
<para>Get activity at current cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Sum all the Impulses in the collection on the current cycle and return activity</para><para><simplesect kind="return"><para>double The activity on specified cycle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="78" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="51" bodyend="54"/>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1aa0bfaecbd5118af91d63296f158cee09" compoundref="TimeKeeper_8cpp" startline="76" endline="78">cryomesh::common::TimeKeeper::getCycle</references>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1afe7b229532e11119cb2653192615d679" compoundref="TimeKeeper_8cpp" startline="19" endline="24">cryomesh::common::TimeKeeper::getTimeKeeper</references>
        <referencedby refid="classcryomesh_1_1components_1_1ImpulseCollection_1a892cc1028a9539de15668c39511adba3" compoundref="ImpulseCollection_8cpp" startline="265" endline="283">refreshDataObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1ad465e66e8b49debd309bed6c8ca5bedb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryomesh::components::ImpulseCollection::clearImpulses</definition>
        <argsstring>()</argsstring>
        <name>clearImpulses</name>
        <briefdescription>
<para>Clear collection up to present cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Update the collection to present cycle (non-inclusive) by dropping all impulses that are &apos;in the past&apos; relative to that cycle. Interval is [0,present_cycle) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="87" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="56" bodyend="59"/>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1aa0bfaecbd5118af91d63296f158cee09" compoundref="TimeKeeper_8cpp" startline="76" endline="78">cryomesh::common::TimeKeeper::getCycle</references>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1afe7b229532e11119cb2653192615d679" compoundref="TimeKeeper_8cpp" startline="19" endline="24">cryomesh::common::TimeKeeper::getTimeKeeper</references>
        <referencedby refid="classcryomesh_1_1components_1_1ImpulseCollection_1a07c7c16d3a12c1f65dcb1686578d19da" compoundref="ImpulseCollection_8cpp" startline="60" endline="62">clearImpulses</referencedby>
        <referencedby refid="classcryomesh_1_1components_1_1Node_1ade03584e4db3f8e1eeddc9ad371b4658" compoundref="Node_8cpp" startline="135" endline="139">cryomesh::components::Node::updateImpulses</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a07c7c16d3a12c1f65dcb1686578d19da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryomesh::components::ImpulseCollection::clearImpulses</definition>
        <argsstring>(common::Cycle cycle)</argsstring>
        <name>clearImpulses</name>
        <param>
          <type><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></type>
          <declname>cycle</declname>
        </param>
        <briefdescription>
<para>Clear collection up to specified cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Update the collection to specified cycle (non-inclusive) by dropping all impulses that are &apos;in the past&apos; relative to that cycle. Interval is [0,cycle)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>cycle The cycle that is the cutoff point for the collection </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="98" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="60" bodyend="62"/>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1ad465e66e8b49debd309bed6c8ca5bedb" compoundref="ImpulseCollection_8cpp" startline="56" endline="59">clearImpulses</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1abe07a298df807be2c62eadf976e02027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::clearImpulses</definition>
        <argsstring>(common::Cycle cycleStart, common::Cycle cycleEnd)</argsstring>
        <name>clearImpulses</name>
        <param>
          <type><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></type>
          <declname>cycleStart</declname>
        </param>
        <param>
          <type><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></type>
          <declname>cycleEnd</declname>
        </param>
        <briefdescription>
<para>Clear the Impulses that start on or after cycle start parameter and finish before cycle end parameter. </para>        </briefdescription>
        <detaileddescription>
<para>Interval is [cycle_start,cycle_end)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>cycleStart Cycle parameter that marks the start of the cleared area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Cycle</parametername>
</parameternamelist>
<parameterdescription>
<para>cycleEnd Cycle parameter that marks the end of the cleared area (non-inclusive)</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;Impulse&gt; &gt; The deleted collection of impulses </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="113" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="64" bodyend="120"/>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1aa0bfaecbd5118af91d63296f158cee09" compoundref="TimeKeeper_8cpp" startline="76" endline="78">cryomesh::common::TimeKeeper::getCycle</references>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1afe7b229532e11119cb2653192615d679" compoundref="TimeKeeper_8cpp" startline="19" endline="24">cryomesh::common::TimeKeeper::getTimeKeeper</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a13560031007e894ea8d8d6cb0bdf48ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::clearActiveImpulses</definition>
        <argsstring>()</argsstring>
        <name>clearActiveImpulses</name>
        <briefdescription>
<para>Clear cycles that are active on this cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Update the collection to by dropping all impulses that are active on this cycle</para><para><simplesect kind="return"><para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;Impulse&gt; &gt; The collection of deleted impulses </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="124" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="122" bodyend="125"/>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1afe7b229532e11119cb2653192615d679" compoundref="TimeKeeper_8cpp" startline="19" endline="24">cryomesh::common::TimeKeeper::getTimeKeeper</references>
        <referencedby refid="classcryomesh_1_1components_1_1ImpulseCollection_1a34f24b20735831c72fb4db04d014cff3" compoundref="ImpulseCollection_8cpp" startline="127" endline="129">clearActiveImpulses</referencedby>
        <referencedby refid="classcryomesh_1_1components_1_1Node_1a92bbb37859ba4b810381bd733ad5d63c" compoundref="Node_8cpp" startline="115" endline="133">cryomesh::components::Node::enterRecovery</referencedby>
        <referencedby refid="classcryomesh_1_1components_1_1Node_1a960b083db047bb1b860d4ed09f9ad583" compoundref="Node_8cpp" startline="49" endline="78">cryomesh::components::Node::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a34f24b20735831c72fb4db04d014cff3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::clearActiveImpulses</definition>
        <argsstring>(common::Cycle cycle)</argsstring>
        <name>clearActiveImpulses</name>
        <param>
          <type><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></type>
          <declname>cycle</declname>
        </param>
        <briefdescription>
<para>Clear cycles that are active on cycle. </para>        </briefdescription>
        <detaileddescription>
<para>Update the collection to by dropping all impulses that are active on cycle</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>cycle The cycle to drop inclusive impulses from</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;Impulse&gt; &gt; The collection of deleted impulses </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="138" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="127" bodyend="129"/>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a13560031007e894ea8d8d6cb0bdf48ff" compoundref="ImpulseCollection_8cpp" startline="122" endline="125">clearActiveImpulses</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a79fffb878409aff462a5fe9b1c1917f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::clearActiveImpulses</definition>
        <argsstring>(common::Cycle cycleStart, common::Cycle cycleEnd)</argsstring>
        <name>clearActiveImpulses</name>
        <param>
          <type><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></type>
          <declname>cycleStart</declname>
        </param>
        <param>
          <type><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></type>
          <declname>cycleEnd</declname>
        </param>
        <briefdescription>
<para>Clear cycles that are active on cycle range. </para>        </briefdescription>
        <detaileddescription>
<para>Interval is [cycle_start,cycle_end)</para><para>Update the collection to by dropping all impulses that are active on cycle range</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>cycleStart The start cycle to drop inclusive impulses from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="classcryomesh_1_1common_1_1Cycle" kindref="compound">common::Cycle</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>cycleEnd The end cycle to drop inclusive impulses from excluded</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;Impulse&gt; &gt; The collection of deleted impulses </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="155" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="131" bodyend="182"/>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1aa0bfaecbd5118af91d63296f158cee09" compoundref="TimeKeeper_8cpp" startline="76" endline="78">cryomesh::common::TimeKeeper::getCycle</references>
        <references refid="classcryomesh_1_1components_1_1Impulse_1a348598ef30bd651b94ebbc0cdc46cb28" compoundref="Impulse_8cpp" startline="169" endline="171">cryomesh::components::Impulse::getFirstActiveCycle</references>
        <references refid="classcryomesh_1_1components_1_1Impulse_1ac91dae86e992103f921da77f0cfe0d02" compoundref="Impulse_8cpp" startline="188" endline="190">cryomesh::components::Impulse::getLastActiveCycle</references>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1afe7b229532e11119cb2653192615d679" compoundref="TimeKeeper_8cpp" startline="19" endline="24">cryomesh::common::TimeKeeper::getTimeKeeper</references>
        <references refid="classcryomesh_1_1components_1_1Impulse_1a9c87bdf033d68e93204704078860aef6" compoundref="Impulse_8cpp" startline="108" endline="110">cryomesh::components::Impulse::isActive</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1ab27eb4667bdb58c98e6614712f3b7373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::clearActivitiesByMinimum</definition>
        <argsstring>(double activity)</argsstring>
        <name>clearActivitiesByMinimum</name>
        <param>
          <type>double</type>
          <declname>activity</declname>
        </param>
        <briefdescription>
<para>Clear the Impulses that have activities less than parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>activity The minimum activity impulses must have to avoid deleteion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;Impulse&gt; &gt; The deleted collection of impulses </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="166" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="184" bodyend="186"/>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3d5bac577752316e38d0d54715b85dca" compoundref="ImpulseCollection_8cpp" startline="400" endline="438">clearActivitiesByValue</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a30ac8a9f8a401faf8277dd948ed2be15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::clearActivitiesByMaximum</definition>
        <argsstring>(double activity)</argsstring>
        <name>clearActivitiesByMaximum</name>
        <param>
          <type>double</type>
          <declname>activity</declname>
        </param>
        <briefdescription>
<para>Clear the Impulses that have activities greater than parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>activity The maximum activity impulses must have to avoid deleteion</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;Impulse&gt; &gt; The deleted collection of impulses </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="177" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="188" bodyend="190"/>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3d5bac577752316e38d0d54715b85dca" compoundref="ImpulseCollection_8cpp" startline="400" endline="438">clearActivitiesByValue</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a44ba846c61ae3d39730bd141072dc8e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryomesh::components::ImpulseCollection::decrementActivityTimers</definition>
        <argsstring>()</argsstring>
        <name>decrementActivityTimers</name>
        <briefdescription>
<para>Decrement the activity timers of all impulses. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="182" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="192" bodyend="206"/>
        <referencedby refid="classcryomesh_1_1components_1_1Connection_1acb0d89bb9d8f2e2a808f7181c308c267" compoundref="Connection_8cpp" startline="25" endline="76">cryomesh::components::Connection::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1aea52c674f13597d808ad3e5f4f4bb9c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::list&lt; boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::getByActivityTimerValue</definition>
        <argsstring>(double value, Comparison comp)</argsstring>
        <name>getByActivityTimerValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285d" kindref="member">Comparison</ref></type>
          <declname>comp</declname>
        </param>
        <briefdescription>
<para>Get impulse list by activity timer value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>value activity timer value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Comparison</parametername>
</parameternamelist>
<parameterdescription>
<para>comp What comparison to make with the value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::list&lt;boost::shared_ptr&lt; Impulse&gt; &gt; The list of impulses that meet the comparison </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="195" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="208" bodyend="256"/>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da591330a7a512ed11c4429536a5d1e6d5" compoundref="ImpulseCollection_8h" startline="39">EqualTo</references>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da5288e1792a76693414517164a2289ec8" compoundref="ImpulseCollection_8h" startline="39">GreaterThan</references>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da5c716b8625dde68ad195d063f37be1d1" compoundref="ImpulseCollection_8h" startline="39">GreaterThanOrEqualTo</references>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da049307d079370521e85998e7141ec3af" compoundref="ImpulseCollection_8h" startline="39">LessThan</references>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285dabb82adff3882cdd74faaef695b6bc82d" compoundref="ImpulseCollection_8h" startline="39">LessThanOrEqualTo</references>
        <referencedby refid="classcryomesh_1_1components_1_1ImpulseCollection_1a317b84fe238bd4ff6bb8eda97b35cf1a" compoundref="ImpulseCollection_8cpp" startline="258" endline="263">removeByActivityTimerValue</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a317b84fe238bd4ff6bb8eda97b35cf1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::list&lt; boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::list&lt; boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::removeByActivityTimerValue</definition>
        <argsstring>(double value=0, Comparison comp=LessThanOrEqualTo)</argsstring>
        <name>removeByActivityTimerValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285d" kindref="member">Comparison</ref></type>
          <declname>comp</declname>
          <defval><ref refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285dabb82adff3882cdd74faaef695b6bc82d" kindref="member">LessThanOrEqualTo</ref></defval>
        </param>
        <briefdescription>
<para>remove impulses by activity timer value </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>value activity timer value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Comparison</parametername>
</parameternamelist>
<parameterdescription>
<para>comp What comparison to make with the value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::list&lt;boost::shared_ptr&lt; Impulse&gt; &gt; The that meet the comparison and were removed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="208" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="258" bodyend="263"/>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1aea52c674f13597d808ad3e5f4f4bb9c1" compoundref="ImpulseCollection_8cpp" startline="208" endline="256">getByActivityTimerValue</references>
        <referencedby refid="classcryomesh_1_1components_1_1Connection_1acb0d89bb9d8f2e2a808f7181c308c267" compoundref="Connection_8cpp" startline="25" endline="76">cryomesh::components::Connection::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a892cc1028a9539de15668c39511adba3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::components::ImpulseCollection::refreshDataObject</definition>
        <argsstring>()</argsstring>
        <name>refreshDataObject</name>
        <reimplements refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1ae015efe3d10cced82d5043f560cbe04f">refreshDataObject</reimplements>
        <briefdescription>
<para>Inherited from DataObjectController. </para>        </briefdescription>
        <detaileddescription>
<para>Overriden to force refresh update on call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="213" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="265" bodyend="283"/>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObject_1a55ad9c772c8b174af40cbb530cf5fade" compoundref="DataObject_8h" startline="178" endline="180">cryomesh::dataobjects::DataObject&lt; U, T &gt;::clear</references>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa13d30e9fa2f1caa0510635214d4bb26" compoundref="DataObjectController_8h" startline="85">cryomesh::dataobjects::DataObjectController&lt; unsigned long int, double &gt;::dataObject</references>
        <references refid="classcryomesh_1_1components_1_1ImpulseCollection_1acf0a767c00f141a2caee02a36aea6569" compoundref="ImpulseCollection_8cpp" startline="51" endline="54">getActivity</references>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1aa0bfaecbd5118af91d63296f158cee09" compoundref="TimeKeeper_8cpp" startline="76" endline="78">cryomesh::common::TimeKeeper::getCycle</references>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObject_1a4b98ff0b286059f8c2cbe8277bfd3e02" compoundref="DataObject_8h" startline="212" endline="214">cryomesh::dataobjects::DataObject&lt; U, T &gt;::getDatasetMaximumSize</references>
        <references refid="classcryomesh_1_1common_1_1TimeKeeper_1afe7b229532e11119cb2653192615d679" compoundref="TimeKeeper_8cpp" startline="19" endline="24">cryomesh::common::TimeKeeper::getTimeKeeper</references>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObject_1a7e57af8afd265116b13b027cc9ab6c52" compoundref="DataObject_8h" startline="191" endline="210">cryomesh::dataobjects::DataObject&lt; U, T &gt;::insert</references>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObject_1ac47906fb6abbb0e655e143b604255785" compoundref="DataObject_8h" startline="71" endline="73">cryomesh::dataobjects::DataObject&lt; U, T &gt;::isLoggingEnabled</references>
        <references refid="classcryomesh_1_1common_1_1Cycle_1a5168b76b3a3f20b5f6e38f96f8f9a8b5" compoundref="Cycle_8cpp" startline="56" endline="58">cryomesh::common::Cycle::toULInt</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a3e6df4eb108bd6e5acc6abe4184912b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void cryomesh::components::ImpulseCollection::enableDebug</definition>
        <argsstring>(bool b)</argsstring>
        <name>enableDebug</name>
        <param>
          <type>bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="215" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="320" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1af2f41361cb06d4e6a4028e7ad9ba4792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
        <definition>ImpulseCollection &amp; cryomesh::components::ImpulseCollection::operator=</definition>
        <argsstring>(const ImpulseCollection &amp;obj)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; obj RHS assignment</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; This object after assignment </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="227" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="285" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a92954d37e3ef80ead5205fc5b288925e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
        <definition>ImpulseCollection &amp; cryomesh::components::ImpulseCollection::operator+=</definition>
        <argsstring>(const ImpulseCollection &amp;obj)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Destructive addition and assignment operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; obj RHS addition</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; This object after addition and assignment </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="238" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="294" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1af3e0802e865b4de8c005d749953c0102" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref></type>
        <definition>const ImpulseCollection cryomesh::components::ImpulseCollection::operator+</definition>
        <argsstring>(const ImpulseCollection &amp;obj) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Non-destructive addition operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; obj RHS addition</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> New object after addition </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="249" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="314" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a68b0c4b2aa6b213d0e579cad2cb920af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryomesh::components::ImpulseCollection::operator==</definition>
        <argsstring>(const ImpulseCollection &amp;obj) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Comparator operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; obj RHS object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="260" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="324" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a64e8ed03f0ef6b33a0a94331bef08b05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryomesh::components::ImpulseCollection::operator!=</definition>
        <argsstring>(const ImpulseCollection &amp;obj) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Not comparator operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; obj RHS object</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool True if not equal, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="271" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1dataobjects_1_1DataObjectController_1a3e510413675407ec0a6745345ca9a3a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void cryomesh::dataobjects::DataObjectController&lt; unsigned long int , double  &gt;::enableLogging</definition>
        <argsstring>(bool enable)</argsstring>
        <name>enableLogging</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Whether logging is enabled or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>enable True to enable logging, false otherwise </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" line="47" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" bodystart="47" bodyend="49"/>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa13d30e9fa2f1caa0510635214d4bb26" compoundref="DataObjectController_8h" startline="85">cryomesh::dataobjects::DataObjectController&lt; U, T &gt;::dataObject</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1dataobjects_1_1DataObjectController_1a70a03ee28392ecf2e039702a18511f05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const std::map&lt; unsigned long int, double &gt; &amp;</type>
        <definition>virtual const std::map&lt;unsigned long int , double &gt;&amp; cryomesh::dataobjects::DataObjectController&lt; unsigned long int , double  &gt;::getMap</definition>
        <argsstring>()</argsstring>
        <name>getMap</name>
        <briefdescription>
<para>Get all cycle values. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::map&lt;unsigned long int, double&gt; &amp; The cycle values </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" line="57" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" bodystart="57" bodyend="60"/>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa13d30e9fa2f1caa0510635214d4bb26" compoundref="DataObjectController_8h" startline="85">cryomesh::dataobjects::DataObjectController&lt; U, T &gt;::dataObject</references>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1ae015efe3d10cced82d5043f560cbe04f" compoundref="DataObjectController_8h" startline="76" endline="77">cryomesh::dataobjects::DataObjectController&lt; U, T &gt;::refreshDataObject</references>
      </memberdef>
      <memberdef kind="function" id="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa919e8676a611028c6b6e6791c87f438" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="classcryomesh_1_1dataobjects_1_1DataObject" kindref="compound">dataobjects::DataObject</ref>&lt; unsigned long int, double &gt; &amp;</type>
        <definition>virtual const dataobjects::DataObject&lt;unsigned long int , double &gt;&amp; cryomesh::dataobjects::DataObjectController&lt; unsigned long int , double  &gt;::getDataObject</definition>
        <argsstring>()</argsstring>
        <name>getDataObject</name>
        <briefdescription>
<para>Get data object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>dataobjects::DataObject&lt;U,T&gt; &amp; The data object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" line="68" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" bodystart="68" bodyend="71"/>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa13d30e9fa2f1caa0510635214d4bb26" compoundref="DataObjectController_8h" startline="85">cryomesh::dataobjects::DataObjectController&lt; U, T &gt;::dataObject</references>
        <references refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1ae015efe3d10cced82d5043f560cbe04f" compoundref="DataObjectController_8h" startline="76" endline="77">cryomesh::dataobjects::DataObjectController&lt; U, T &gt;::refreshDataObject</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classcryomesh_1_1components_1_1ImpulseCollection_1a7c219e0c7bb5a54301e5655d28f8a81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const ImpulseCollection &amp;obj)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp;</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>To stream operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>std::ostream</parametername>
</parameternamelist>
<parameterdescription>
<para>&amp; os The output stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> &amp; obj The object to stream</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream &amp; The output stream </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="284" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="375" bodyend="391"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classcryomesh_1_1components_1_1ImpulseCollection_1a3d5bac577752316e38d0d54715b85dca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> &gt; &gt;</type>
        <definition>std::map&lt; boost::uuids::uuid, boost::shared_ptr&lt; Impulse &gt; &gt; cryomesh::components::ImpulseCollection::clearActivitiesByValue</definition>
        <argsstring>(double activity, bool greater)</argsstring>
        <name>clearActivitiesByValue</name>
        <param>
          <type>double</type>
          <declname>activity</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>greater</declname>
        </param>
        <briefdescription>
<para>Get the associated Mesh. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Mesh</para></simplesect>
const boost::shared_ptr&lt;Mesh&gt; getMesh() const; Clear the Impulses that have activities greater or less than parameter</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>double</parametername>
</parameternamelist>
<parameterdescription>
<para>activity The maximum or minimum activity impulses must have to avoid deleteion </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bool</parametername>
</parameternamelist>
<parameterdescription>
<para>True is first parameter is maximum allowed value, false if its the minimum</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::map&lt;boost::uuids::uuid, boost::shared_ptr&lt;Impulse&gt; &gt; The deleted collection of impulses </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="309" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.cpp" bodystart="400" bodyend="438"/>
        <referencedby refid="classcryomesh_1_1components_1_1ImpulseCollection_1a30ac8a9f8a401faf8277dd948ed2be15" compoundref="ImpulseCollection_8cpp" startline="188" endline="190">clearActivitiesByMaximum</referencedby>
        <referencedby refid="classcryomesh_1_1components_1_1ImpulseCollection_1ab27eb4667bdb58c98e6614712f3b7373" compoundref="ImpulseCollection_8cpp" startline="184" endline="186">clearActivitiesByMinimum</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa13d30e9fa2f1caa0510635214d4bb26" prot="protected" static="no" mutable="no">
        <type><ref refid="classcryomesh_1_1dataobjects_1_1DataObject" kindref="compound">dataobjects::DataObject</ref>&lt; unsigned long int, double &gt;</type>
        <definition>dataobjects::DataObject&lt;unsigned long int , double &gt; cryomesh::dataobjects::DataObjectController&lt; unsigned long int , double  &gt;::dataObject</definition>
        <argsstring></argsstring>
        <name>dataObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" line="85" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/dataobjects/DataObjectController.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classcryomesh_1_1components_1_1ImpulseCollection_1a892cc1028a9539de15668c39511adba3" compoundref="ImpulseCollection_8cpp" startline="265" endline="283">refreshDataObject</referencedby>
        <referencedby refid="classcryomesh_1_1components_1_1Node_1a960b083db047bb1b860d4ed09f9ad583" compoundref="Node_8cpp" startline="49" endline="78">cryomesh::components::Node::update</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classcryomesh_1_1components_1_1ImpulseCollection" kindref="compound">ImpulseCollection</ref> represents a collection of <ref refid="classcryomesh_1_1components_1_1Impulse" kindref="compound">Impulse</ref> objects. </para>    </briefdescription>
    <detaileddescription>
<para>A collection of Impulses that allows for Impulses to be held, &apos;moved forward&apos; in time, and summated in some way </para>    </detaileddescription>
    <inheritancegraph>
      <node id="460">
        <label>cryomesh::components::ImpulseCollection</label>
        <link refid="classcryomesh_1_1components_1_1ImpulseCollection"/>
        <childnode refid="461" relation="public-inheritance">
        </childnode>
      </node>
      <node id="461">
        <label>cryomesh::dataobjects::DataObjectController&lt; unsigned long int, double &gt;</label>
        <link refid="classcryomesh_1_1dataobjects_1_1DataObjectController"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="462">
        <label>cryomesh::components::ImpulseCollection</label>
        <link refid="classcryomesh_1_1components_1_1ImpulseCollection"/>
        <childnode refid="463" relation="public-inheritance">
        </childnode>
      </node>
      <node id="463">
        <label>cryomesh::dataobjects::DataObjectController&lt; unsigned long int, double &gt;</label>
        <link refid="classcryomesh_1_1dataobjects_1_1DataObjectController"/>
        <childnode refid="464" relation="usage">
          <edgelabel>dataObject</edgelabel>
        </childnode>
      </node>
      <node id="465">
        <label>std::map&lt; unsigned long int, double &gt;</label>
      </node>
      <node id="464">
        <label>cryomesh::dataobjects::DataObject&lt; unsigned long int, double &gt;</label>
        <link refid="classcryomesh_1_1dataobjects_1_1DataObject"/>
        <childnode refid="465" relation="usage">
          <edgelabel>valueMap</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" line="35" bodyfile="/home/niall/Projects/Eclipse/CPP/cryomesh/src/components/ImpulseCollection.h" bodystart="35" bodyend="312"/>
    <listofallmembers>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a13560031007e894ea8d8d6cb0bdf48ff" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearActiveImpulses</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a34f24b20735831c72fb4db04d014cff3" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearActiveImpulses</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a79fffb878409aff462a5fe9b1c1917f8" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearActiveImpulses</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a30ac8a9f8a401faf8277dd948ed2be15" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearActivitiesByMaximum</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1ab27eb4667bdb58c98e6614712f3b7373" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearActivitiesByMinimum</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3d5bac577752316e38d0d54715b85dca" prot="protected" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearActivitiesByValue</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1ad465e66e8b49debd309bed6c8ca5bedb" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearImpulses</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a07c7c16d3a12c1f65dcb1686578d19da" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearImpulses</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1abe07a298df807be2c62eadf976e02027" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>clearImpulses</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285d" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>Comparison</name></member>
      <member refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa13d30e9fa2f1caa0510635214d4bb26" prot="protected" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>dataObject</name></member>
      <member refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1a9b5dd38c83c6fb1dc5bcf4ddcbc7a577" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>DataObjectController</name></member>
      <member refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1a01e98fc9bc0f3495bd05e01e6cc15f29" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>DataObjectController</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a44ba846c61ae3d39730bd141072dc8e9" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>decrementActivityTimers</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3e6df4eb108bd6e5acc6abe4184912b8" prot="public" virt="virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>enableDebug</name></member>
      <member refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1a3e510413675407ec0a6745345ca9a3a8" prot="public" virt="virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>enableLogging</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da591330a7a512ed11c4429536a5d1e6d5" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>EqualTo</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1ac9f6be8ecad07258e2c7b25efaa3df70" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>getActivity</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1acf0a767c00f141a2caee02a36aea6569" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>getActivity</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1aea52c674f13597d808ad3e5f4f4bb9c1" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>getByActivityTimerValue</name></member>
      <member refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa919e8676a611028c6b6e6791c87f438" prot="public" virt="virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>getDataObject</name></member>
      <member refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1a70a03ee28392ecf2e039702a18511f05" prot="public" virt="virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>getMap</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da5288e1792a76693414517164a2289ec8" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>GreaterThan</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da5c716b8625dde68ad195d063f37be1d1" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>GreaterThanOrEqualTo</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a230de3cb1f60f8eba8a53237af529ed2" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>ImpulseCollection</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da049307d079370521e85998e7141ec3af" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>LessThan</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285dabb82adff3882cdd74faaef695b6bc82d" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>LessThanOrEqualTo</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a3682719f1c0bd471e8c5a19b39cc285da1402ae2e51bdcd9c25fae0dbb70e0b7a" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>NotEqualTo</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a64e8ed03f0ef6b33a0a94331bef08b05" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>operator!=</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1af3e0802e865b4de8c005d749953c0102" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>operator+</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a92954d37e3ef80ead5205fc5b288925e" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>operator+=</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a7c219e0c7bb5a54301e5655d28f8a81b" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>operator&lt;&lt;</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1af2f41361cb06d4e6a4028e7ad9ba4792" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>operator=</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a68b0c4b2aa6b213d0e579cad2cb920af" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>operator==</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a892cc1028a9539de15668c39511adba3" prot="public" virt="virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>refreshDataObject</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a317b84fe238bd4ff6bb8eda97b35cf1a" prot="public" virt="non-virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>removeByActivityTimerValue</name></member>
      <member refid="classcryomesh_1_1dataobjects_1_1DataObjectController_1aa023e2b5199e935b52781a8556d97cbe" prot="public" virt="virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>~DataObjectController</name></member>
      <member refid="classcryomesh_1_1components_1_1ImpulseCollection_1a91bdcfc982090f9c665d5d8b80b8d3b9" prot="public" virt="virtual"><scope>cryomesh::components::ImpulseCollection</scope><name>~ImpulseCollection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
