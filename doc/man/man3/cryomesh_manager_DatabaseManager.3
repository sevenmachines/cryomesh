.TH "cryomesh::manager::DatabaseManager" 3 "Fri Apr 1 2011" "cryomesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cryomesh::manager::DatabaseManager \- 
.PP
Database manager creates and maintains a database of mesh related objects and data.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DatabaseManager.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDatabaseManager\fP (const std::string &dbfile=\fBDEFAULT_DATABASE\fP)"
.br
.RI "\fIDefault constructor using a filename as the database or a default Opens the file or creates it and creates the tables if it doesnt exist. \fP"
.ti -1c
.RI "virtual \fB~DatabaseManager\fP ()"
.br
.RI "\fIDefault destructor closes the database. \fP"
.ti -1c
.RI "bool \fBisDatabaseAccessable\fP () const "
.br
.RI "\fICheck if the database is accessible. \fP"
.ti -1c
.RI "void \fBcreateTables\fP ()"
.br
.RI "\fICreate all needed tables. \fP"
.ti -1c
.RI "void \fBclearTables\fP ()"
.br
.RI "\fIClear all tables. \fP"
.ti -1c
.RI "std::string \fBclearTable\fP (const std::string &table)"
.br
.RI "\fIClear all values in a table. \fP"
.ti -1c
.RI "std::string \fBdropTable\fP (const std::string &table)"
.br
.RI "\fIDrop a table from database. \fP"
.ti -1c
.RI "std::string \fBinsertNode\fP (const \fBDatabaseObject\fP &db_object)"
.br
.RI "\fIInsert a node data object into the table. \fP"
.ti -1c
.RI "std::string \fBinsertConnection\fP (const \fBDatabaseObject\fP &db_object)"
.br
.RI "\fIInsert a connection data object into the table. \fP"
.ti -1c
.RI "std::string \fBselectNode\fP (const std::string &uuid, const \fBcommon::Cycle\fP &cycle)"
.br
.RI "\fISelect unique node entry. \fP"
.ti -1c
.RI "std::string \fBselectConnection\fP (const std::string &uuid, const \fBcommon::Cycle\fP &cycle)"
.br
.RI "\fISelect unique column entry. \fP"
.ti -1c
.RI "std::string \fBselectNodeValue\fP (const std::string &uuid, const \fBcommon::Cycle\fP &cycle, const std::string &column)"
.br
.RI "\fISelect unique node column entry. \fP"
.ti -1c
.RI "std::string \fBselectConnectionValue\fP (const std::string &uuid, const \fBcommon::Cycle\fP &cycle, const std::string &column)"
.br
.RI "\fISelect unique column column entry. \fP"
.ti -1c
.RI "std::string \fBselectValue\fP (const std::string &table, const std::string &uuid, const \fBcommon::Cycle\fP &cycle, const std::string &column)"
.br
.RI "\fISelect unique column column entry from table. \fP"
.ti -1c
.RI "std::string \fBselectNodes\fP (const std::string &criteria='')"
.br
.RI "\fISelect nodes by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fP"
.ti -1c
.RI "std::string \fBselectConnections\fP (const std::string &criteria='')"
.br
.RI "\fISelect connections by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fP"
.ti -1c
.RI "std::string \fBdeleteNode\fP (const std::string &id)"
.br
.RI "\fIDelete node by uuid. \fP"
.ti -1c
.RI "std::string \fBdeleteNodes\fP (const std::string &criteria='')"
.br
.RI "\fIDelete nodes by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fP"
.ti -1c
.RI "std::string \fBdeleteConnection\fP (const std::string &id)"
.br
.RI "\fIDelete connection by uuid. \fP"
.ti -1c
.RI "std::string \fBdeleteConnections\fP (const std::string &criteria='')"
.br
.RI "\fIDelete nodes by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fP"
.ti -1c
.RI "std::string \fBdeleteSelected\fP (const std::string &table, const std::string &criteria='')"
.br
.RI "\fIDelete objects from a table by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fP"
.ti -1c
.RI "int \fBcountNodes\fP (const std::string &criteria='')"
.br
.RI "\fICount nodes by a criteria string eg, 'cycle=1'. \fP"
.ti -1c
.RI "int \fBcountConnections\fP (const std::string &criteria='')"
.br
.RI "\fICount connections by a criteria string eg, 'cycle=1'. \fP"
.ti -1c
.RI "int \fBcountRows\fP (const std::string &table, const std::string &criteria='')"
.br
.RI "\fICount objects from a table by a criteria string eg, 'cycle=1'. \fP"
.ti -1c
.RI "std::string \fBupdateNode\fP (const std::string &uuid_str, const \fBcommon::Cycle\fP &cycle, const std::string &options)"
.br
.RI "\fIupdate node from using options list \fP"
.ti -1c
.RI "std::string \fBupdateConnection\fP (const std::string &uuid_str, const \fBcommon::Cycle\fP &cycle, const std::string &options)"
.br
.RI "\fIupdate node from using options list \fP"
.ti -1c
.RI "std::string \fBupdateByUUID\fP (const std::string &uuid_str, const \fBcommon::Cycle\fP &cycle, const std::string &options, const std::string &table)"
.br
.RI "\fIupdate object from a table using options list \fP"
.ti -1c
.RI "std::string \fBselect\fP (const std::string &table, const std::string &criteria='')"
.br
.RI "\fISelect all columns from table using criteria. \fP"
.ti -1c
.RI "std::string \fBdeleteAll\fP (const std::string &table)"
.br
.RI "\fIdelete all data from table \fP"
.ti -1c
.RI "std::string \fBdeleteAllByCycle\fP (const \fBcommon::Cycle\fP &cycle, int comparison_type)"
.br
.RI "\fIdelete all by cycle \fP"
.ti -1c
.RI "std::string \fBdeleteNodesByCycle\fP (const \fBcommon::Cycle\fP &cycle, int comparison_type)"
.br
.RI "\fIdelete nodes by cycle \fP"
.ti -1c
.RI "std::string \fBdeleteConnectionsByCycle\fP (const \fBcommon::Cycle\fP &cycle, int comparison_type)"
.br
.RI "\fIdelete connections by cycle \fP"
.ti -1c
.RI "std::string \fBdeleteByCycle\fP (const std::string &table, const \fBcommon::Cycle\fP &cycle, int comparison_type)"
.br
.RI "\fIdelete objects from table by cycle \fP"
.ti -1c
.RI "std::ostream & \fBprintHistory\fP (std::ostream &os, const \fBcommon::Cycle\fP &cycle)"
.br
.RI "\fIPrint sql history to output stream. \fP"
.ti -1c
.RI "std::ostream & \fBprintHistory\fP (std::ostream &os, unsigned int countback=1)"
.br
.RI "\fIPrint sql history to output stream. \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static int \fBdatabaseCallback\fP (void *unused, int argc, char **argv, char **columnName)"
.br
.RI "\fIFunction that is called on finishing an sql command. \fP"
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static const std::string \fBDEFAULT_DATABASE\fP = 'default.db'"
.br
.ti -1c
.RI "static const \fBNodeTableFormat\fP \fBNODES_TABLE_FORMAT\fP"
.br
.ti -1c
.RI "static const \fBConnectionTableFormat\fP \fBCONNECTIONS_TABLE_FORMAT\fP"
.br
.RI "\fIDefault connection table format. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "std::string \fBsqlCommand\fP (const std::string &command)"
.br
.RI "\fIRun a provided sql command string. \fP"
.ti -1c
.RI "std::string \fBsqlCommandBySelection\fP (const std::string &table, const std::string &command, const std::string &criteria)"
.br
.in -1c
.SS "Static Protected Member Functions"

.in +1c
.ti -1c
.RI "static const std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > & \fBaddHistoryEntry\fP (const std::string &command, const std::string &results, std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > &map)"
.br
.RI "\fIAdd an entry to a historical multimap. \fP"
.ti -1c
.RI "static const std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > & \fBaddHistoryEntry\fP (const std::string &command, const std::vector< std::string > &results, std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > &map)"
.br
.RI "\fIAdd an list of entries to a historical multimap. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "sqlite3 * \fBdatabase\fP"
.br
.ti -1c
.RI "int \fBerrorCode\fP"
.br
.ti -1c
.RI "char * \fBerrorMessage\fP"
.br
.ti -1c
.RI "bool \fBdatabaseAccess\fP"
.br
.RI "\fIDatabase accessable. \fP"
.ti -1c
.RI "std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > \fBsqlResults\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBsqlResultsBuffer\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static const \fBcommon::Cycle\fP \fBMAX_COMMAND_HISTORY\fP = \fBcommon::Cycle\fP(100)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Database manager creates and maintains a database of mesh related objects and data. 
.PP
Definition at line 30 of file DatabaseManager.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "cryomesh::manager::DatabaseManager::DatabaseManager (const std::string &dbfile = \fC\fBDEFAULT_DATABASE\fP\fP)"
.PP
Default constructor using a filename as the database or a default Opens the file or creates it and creates the tables if it doesnt exist. \fBParameters:\fP
.RS 4
\fIstd::string\fP The name of the database to open/create 
.RE
.PP

.PP
Definition at line 57 of file DatabaseManager.cpp.
.SS "cryomesh::manager::DatabaseManager::~DatabaseManager ()\fC [virtual]\fP"
.PP
Default destructor closes the database. 
.PP
Definition at line 82 of file DatabaseManager.cpp.
.SH "Member Function Documentation"
.PP 
.SS "const std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > & cryomesh::manager::DatabaseManager::addHistoryEntry (const std::string &command, const std::string &results, std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > &map)\fC [static, protected]\fP"
.PP
Add an entry to a historical multimap. \fBParameters:\fP
.RS 4
\fIstd::string\fP Entry to add 
.br
\fIstd::multimap<std::string,std::string>\fP Map to add entry to
.RE
.PP
\fBReturns:\fP
.RS 4
std::multimap<std::string, std::string> Return the modified map 
.RE
.PP

.PP
Definition at line 320 of file DatabaseManager.cpp.
.PP
References cryomesh::common::TimeKeeper::getTimeKeeper(), and MAX_COMMAND_HISTORY.
.PP
Referenced by addHistoryEntry().
.SS "const std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > & cryomesh::manager::DatabaseManager::addHistoryEntry (const std::string &command, const std::vector< std::string > &results, std::multimap< \fBcommon::Cycle\fP, std::pair< std::string, std::string > > &map)\fC [static, protected]\fP"
.PP
Add an list of entries to a historical multimap. \fBParameters:\fP
.RS 4
\fIstd::vector<std::string>\fP Entries to add 
.br
\fIstd::multimap<std::string,std::string>\fP Map to add entry to
.RE
.PP
\fBReturns:\fP
.RS 4
std::multimap<std::string, std::string> Return the modified map 
.RE
.PP

.PP
Definition at line 301 of file DatabaseManager.cpp.
.PP
References addHistoryEntry().
.SS "std::string cryomesh::manager::DatabaseManager::clearTable (const std::string &table)"
.PP
Clear all values in a table. \fBParameters:\fP
.RS 4
\fIstd::string\fP The table to clear
.RE
.PP
\fBReturns:\fP
.RS 4
std::string The result of the sql query 
.RE
.PP

.PP
Definition at line 101 of file DatabaseManager.cpp.
.SS "void cryomesh::manager::DatabaseManager::clearTables ()"
.PP
Clear all tables. 
.PP
Definition at line 96 of file DatabaseManager.cpp.
.SS "int cryomesh::manager::DatabaseManager::countConnections (const std::string &criteria = \fC''\fP)"
.PP
Count connections by a criteria string eg, 'cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
int The result of the count 
.RE
.PP

.PP
Definition at line 184 of file DatabaseManager.cpp.
.SS "int cryomesh::manager::DatabaseManager::countNodes (const std::string &criteria = \fC''\fP)"
.PP
Count nodes by a criteria string eg, 'cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
int The result of the count 
.RE
.PP

.PP
Definition at line 181 of file DatabaseManager.cpp.
.SS "int cryomesh::manager::DatabaseManager::countRows (const std::string &table, const std::string &criteria = \fC''\fP)"
.PP
Count objects from a table by a criteria string eg, 'cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The table to count from 
.br
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
int The result of the count 
.RE
.PP

.PP
Definition at line 188 of file DatabaseManager.cpp.
.SS "void cryomesh::manager::DatabaseManager::createTables ()"
.PP
Create all needed tables. 
.PP
Definition at line 91 of file DatabaseManager.cpp.
.SS "int cryomesh::manager::DatabaseManager::databaseCallback (void *unused, intargc, char **argv, char **columnName)\fC [static]\fP"
.PP
Function that is called on finishing an sql command. 
.PP
Definition at line 28 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteAll (const std::string &table)"
.PP
delete all data from table \fBParameters:\fP
.RS 4
\fIstd::string\fP Name of table
.RE
.PP
\fBReturns:\fP
.RS 4
std::string sql query results 
.RE
.PP

.SS "std::string cryomesh::manager::DatabaseManager::deleteAllByCycle (const \fBcommon::Cycle\fP &cycle, intcomparison_type)"
.PP
delete all by cycle \fBParameters:\fP
.RS 4
\fI\fBcommon::Cycle\fP\fP Cycle to compare against 
.br
\fIint\fP The type of comparison to make, <0 for less than, ==0 for equals, and >0 for greater than
.RE
.PP
\fBReturns:\fP
.RS 4
std::string sql query results 
.RE
.PP

.PP
Definition at line 235 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteByCycle (const std::string &table, const \fBcommon::Cycle\fP &cycle, intcomparison_type)"
.PP
delete objects from table by cycle \fBParameters:\fP
.RS 4
\fIstd::string\fP The table to delete from 
.br
\fI\fBcommon::Cycle\fP\fP Cycle to compare against 
.br
\fIint\fP The type of comparison to make, <0 for less than, ==0 for equals, and >0 for greater than
.RE
.PP
\fBReturns:\fP
.RS 4
std::string sql query results 
.RE
.PP

.PP
Definition at line 248 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteConnection (const std::string &id)"
.PP
Delete connection by uuid. \fBParameters:\fP
.RS 4
\fIstd::string\fP The uuid to match
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 165 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteConnections (const std::string &criteria = \fC''\fP)"
.PP
Delete nodes by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 171 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteConnectionsByCycle (const \fBcommon::Cycle\fP &cycle, intcomparison_type)"
.PP
delete connections by cycle \fBParameters:\fP
.RS 4
\fI\fBcommon::Cycle\fP\fP Cycle to compare against 
.br
\fIint\fP The type of comparison to make, <0 for less than, ==0 for equals, and >0 for greater than
.RE
.PP
\fBReturns:\fP
.RS 4
std::string sql query results 
.RE
.PP

.PP
Definition at line 244 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteNode (const std::string &id)"
.PP
Delete node by uuid. \fBParameters:\fP
.RS 4
\fIstd::string\fP The uuid to match
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 155 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteNodes (const std::string &criteria = \fC''\fP)"
.PP
Delete nodes by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 161 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteNodesByCycle (const \fBcommon::Cycle\fP &cycle, intcomparison_type)"
.PP
delete nodes by cycle \fBParameters:\fP
.RS 4
\fI\fBcommon::Cycle\fP\fP Cycle to compare against 
.br
\fIint\fP The type of comparison to make, <0 for less than, ==0 for equals, and >0 for greater than
.RE
.PP
\fBReturns:\fP
.RS 4
std::string sql query results 
.RE
.PP

.PP
Definition at line 240 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::deleteSelected (const std::string &table, const std::string &criteria = \fC''\fP)"
.PP
Delete objects from a table by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The table to delete from 
.br
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 175 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::dropTable (const std::string &table)"
.PP
Drop a table from database. \fBParameters:\fP
.RS 4
\fIstd::string\fP The table to drop
.RE
.PP
\fBReturns:\fP
.RS 4
std::string The result of the sql query 
.RE
.PP

.PP
Definition at line 228 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::insertConnection (const \fBDatabaseObject\fP &db_object)"
.PP
Insert a connection data object into the table. \fBParameters:\fP
.RS 4
\fI\fBDatabaseObject\fP\fP Database object to insert as a node
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 110 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::insertNode (const \fBDatabaseObject\fP &db_object)"
.PP
Insert a node data object into the table. \fBParameters:\fP
.RS 4
\fI\fBDatabaseObject\fP\fP Database object to insert as a node
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 107 of file DatabaseManager.cpp.
.SS "bool cryomesh::manager::DatabaseManager::isDatabaseAccessable () const"
.PP
Check if the database is accessible. \fBReturns:\fP
.RS 4
bool True if deemed accessible, false otherwise 
.RE
.PP

.PP
Definition at line 87 of file DatabaseManager.cpp.
.SS "std::ostream & cryomesh::manager::DatabaseManager::printHistory (std::ostream &os, const \fBcommon::Cycle\fP &cycle)"
.PP
Print sql history to output stream. \fBParameters:\fP
.RS 4
\fIstd::ostream\fP Output stream to print to 
.br
\fICycle\fP The cycle to print information on
.RE
.PP
\fBReturns:\fP
.RS 4
std::ostream Return the supplied output stream 
.RE
.PP

.PP
Definition at line 343 of file DatabaseManager.cpp.
.PP
References sqlResults.
.SS "std::ostream & cryomesh::manager::DatabaseManager::printHistory (std::ostream &os, unsigned intcountback = \fC1\fP)"
.PP
Print sql history to output stream. \fBParameters:\fP
.RS 4
\fIstd::ostream\fP Output stream to print to 
.br
\fIunsigned\fP int Muber of cycles of previous history to print
.RE
.PP
\fBReturns:\fP
.RS 4
std::ostream Return the supplied output stream 
.RE
.PP

.PP
Definition at line 333 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::select (const std::string &table, const std::string &criteria = \fC''\fP)"
.PP
Select all columns from table using criteria. \fBParameters:\fP
.RS 4
\fIstd::string\fP Name of table 
.br
\fIstd::string\fP Selection criteria
.RE
.PP
\fBReturns:\fP
.RS 4
std::string sql query results 
.RE
.PP

.PP
Definition at line 151 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::selectConnection (const std::string &uuid, const \fBcommon::Cycle\fP &cycle)"
.PP
Select unique column entry. \fBParameters:\fP
.RS 4
\fIstd::string\fP The uuid of the node 
.br
\fICycle\fP The cycle to select on, to force uniqueness
.RE
.PP
\fBReturns:\fP
.RS 4
std::string The value of the entry 
.RE
.PP

.PP
Definition at line 120 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::selectConnections (const std::string &criteria = \fC''\fP)"
.PP
Select connections by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 148 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::selectConnectionValue (const std::string &uuid, const \fBcommon::Cycle\fP &cycle, const std::string &column)"
.PP
Select unique column column entry. \fBParameters:\fP
.RS 4
\fIstd::string\fP The uuid of the node 
.br
\fICycle\fP The cycle to select on, to force uniqueness 
.br
\fIstd::string\fP The column to select
.RE
.PP
\fBReturns:\fP
.RS 4
std::string The value of the entry 
.RE
.PP

.PP
Definition at line 131 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::selectNode (const std::string &uuid, const \fBcommon::Cycle\fP &cycle)"
.PP
Select unique node entry. \fBParameters:\fP
.RS 4
\fIstd::string\fP The uuid of the node 
.br
\fICycle\fP The cycle to select on, to force uniqueness
.RE
.PP
\fBReturns:\fP
.RS 4
std::string The value of the entry 
.RE
.PP

.PP
Definition at line 114 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::selectNodes (const std::string &criteria = \fC''\fP)"
.PP
Select nodes by a criteria string eg, 'id=erwrs324 AND cycle=1'. \fBParameters:\fP
.RS 4
\fIstd::string\fP The criteria to match
.RE
.PP
\fBReturns:\fP
.RS 4
std::string Result of sql query 
.RE
.PP

.PP
Definition at line 145 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::selectNodeValue (const std::string &uuid, const \fBcommon::Cycle\fP &cycle, const std::string &column)"
.PP
Select unique node column entry. \fBParameters:\fP
.RS 4
\fIstd::string\fP The uuid of the node 
.br
\fICycle\fP The cycle to select on, to force uniqueness 
.br
\fIstd::string\fP The column to select
.RE
.PP
\fBReturns:\fP
.RS 4
std::string The value of the entry 
.RE
.PP

.PP
Definition at line 127 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::selectValue (const std::string &table, const std::string &uuid, const \fBcommon::Cycle\fP &cycle, const std::string &column)"
.PP
Select unique column column entry from table. \fBParameters:\fP
.RS 4
\fIstd::string\fP The table to utilise 
.br
\fIstd::string\fP The uuid of the node 
.br
\fICycle\fP The cycle to select on, to force uniqueness 
.br
\fIstd::string\fP The column to select
.RE
.PP
\fBReturns:\fP
.RS 4
std::string The value of the entry 
.RE
.PP

.PP
Definition at line 135 of file DatabaseManager.cpp.
.SS "std::string cryomesh::manager::DatabaseManager::sqlCommand (const std::string &command)\fC [protected]\fP"
.PP
Run a provided sql command string. \fBParameters:\fP
.RS 4
\fIstd::string\fP The command string to run
.RE
.PP
\fBReturns:\fP
.RS 4
std::vector<std::string> vector of results 
.RE
.PP

.PP
Definition at line 264 of file DatabaseManager.cpp.
.PP
Referenced by sqlCommandBySelection(), and updateByUUID().
.SS "std::string cryomesh::manager::DatabaseManager::sqlCommandBySelection (const std::string &table, const std::string &command, const std::string &criteria)\fC [protected]\fP"
.PP
Definition at line 217 of file DatabaseManager.cpp.
.PP
References sqlCommand().
.SS "std::string cryomesh::manager::DatabaseManager::updateByUUID (const std::string &uuid_str, const \fBcommon::Cycle\fP &cycle, const std::string &options, const std::string &table)"
.PP
update object from a table using options list \fBParameters:\fP
.RS 4
\fIstd::string\fP The id to match 
.br
\fI\fBcommon::Cycle\fP\fP The cycle to match 
.br
\fIstd::string\fP The options to set 
.br
\fIstd::string\fP The table to use
.RE
.PP
\fBReturns:\fP
.RS 4
int The result of the count 
.RE
.PP

.PP
Definition at line 210 of file DatabaseManager.cpp.
.PP
References sqlCommand(), and cryomesh::common::Cycle::toLInt().
.PP
Referenced by updateConnection(), and updateNode().
.SS "std::string cryomesh::manager::DatabaseManager::updateConnection (const std::string &uuid_str, const \fBcommon::Cycle\fP &cycle, const std::string &options)"
.PP
update node from using options list \fBParameters:\fP
.RS 4
\fIstd::string\fP The id to match 
.br
\fI\fBcommon::Cycle\fP\fP The cycle to match 
.br
\fIstd::string\fP The options to set
.RE
.PP
\fBReturns:\fP
.RS 4
int The result of the count 
.RE
.PP

.PP
Definition at line 206 of file DatabaseManager.cpp.
.PP
References updateByUUID().
.SS "std::string cryomesh::manager::DatabaseManager::updateNode (const std::string &uuid_str, const \fBcommon::Cycle\fP &cycle, const std::string &options)"
.PP
update node from using options list \fBParameters:\fP
.RS 4
\fIstd::string\fP The id to match 
.br
\fI\fBcommon::Cycle\fP\fP The cycle to match 
.br
\fIstd::string\fP The options to set
.RE
.PP
\fBReturns:\fP
.RS 4
int The result of the count 
.RE
.PP

.PP
Definition at line 202 of file DatabaseManager.cpp.
.PP
References updateByUUID().
.SH "Member Data Documentation"
.PP 
.SS "const \fBConnectionTableFormat\fP \fBcryomesh::manager::DatabaseManager::CONNECTIONS_TABLE_FORMAT\fP\fC [static]\fP"
.PP
Default connection table format. 
.PP
Definition at line 471 of file DatabaseManager.h.
.SS "sqlite3* \fBcryomesh::manager::DatabaseManager::database\fP\fC [protected]\fP"
.PP
Definition at line 480 of file DatabaseManager.h.
.SS "bool \fBcryomesh::manager::DatabaseManager::databaseAccess\fP\fC [protected]\fP"
.PP
Database accessable. 
.PP
Definition at line 501 of file DatabaseManager.h.
.SS "const std::string \fBcryomesh::manager::DatabaseManager::DEFAULT_DATABASE\fP = 'default.db'\fC [static]\fP"
.PP
Definition at line 454 of file DatabaseManager.h.
.SS "int \fBcryomesh::manager::DatabaseManager::errorCode\fP\fC [protected]\fP"
.PP
Definition at line 487 of file DatabaseManager.h.
.SS "char* \fBcryomesh::manager::DatabaseManager::errorMessage\fP\fC [protected]\fP"
.PP
Definition at line 494 of file DatabaseManager.h.
.SS "const \fBcommon::Cycle\fP \fBcryomesh::manager::DatabaseManager::MAX_COMMAND_HISTORY\fP = \fBcommon::Cycle\fP(100)\fC [static, protected]\fP"
.PP
Definition at line 522 of file DatabaseManager.h.
.PP
Referenced by addHistoryEntry().
.SS "const \fBNodeTableFormat\fP \fBcryomesh::manager::DatabaseManager::NODES_TABLE_FORMAT\fP\fC [static]\fP"
.PP
Definition at line 466 of file DatabaseManager.h.
.SS "std::multimap<\fBcommon::Cycle\fP, std::pair<std::string, std::string> > \fBcryomesh::manager::DatabaseManager::sqlResults\fP\fC [protected]\fP"
.PP
Definition at line 508 of file DatabaseManager.h.
.PP
Referenced by printHistory().
.SS "std::vector<std::string> \fBcryomesh::manager::DatabaseManager::sqlResultsBuffer\fP\fC [protected]\fP"
.PP
Definition at line 515 of file DatabaseManager.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for cryomesh from the source code.
