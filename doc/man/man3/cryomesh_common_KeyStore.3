.TH "cryomesh::common::KeyStore" 3 "Mon Mar 14 2011" "cryomesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cryomesh::common::KeyStore \- 
.PP
Simple class to store and retrieve keys.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <KeyStore.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKeyStore\fP ()"
.br
.RI "\fIDefault constructor. \fP"
.ti -1c
.RI "virtual \fB~KeyStore\fP ()"
.br
.RI "\fIDefault destructor. \fP"
.ti -1c
.RI "void \fBadd\fP (const std::initializer_list< std::pair< U, T > > &list)"
.br
.RI "\fIAdd an initialiser list of key/object pairs. \fP"
.ti -1c
.RI "void \fBadd\fP (const U &first, const T &second)"
.br
.RI "\fIAdd a key/object pairs. \fP"
.ti -1c
.RI "virtual void \fBremove\fP (const std::initializer_list< U > &list)"
.br
.RI "\fIRemove objects from collection by initialiser list. \fP"
.ti -1c
.RI "void \fBremove\fP (U key)"
.br
.RI "\fIRemove object from collection bt key. \fP"
.ti -1c
.RI "virtual const std::map< U, T >::iterator \fBget\fP (const U &key)"
.br
.RI "\fIGet iterator to key or null iterator otherwise. \fP"
.ti -1c
.RI "virtual const std::map< U, T >::iterator \fBgetNullEntry\fP ()"
.br
.RI "\fIGet iteratorto null. \fP"
.ti -1c
.RI "virtual void \fBclear\fP ()"
.br
.RI "\fIClear all from store. \fP"
.ti -1c
.RI "virtual size_t \fBsize\fP () const "
.br
.RI "\fIReturn size. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "std::map< U, T > \fBnullPair\fP"
.br
.RI "\fIDefault null value entry. \fP"
.ti -1c
.RI "std::map< U, T >::iterator \fBit_null\fP"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::map< U, T > \fBobjects\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class U, class T> class cryomesh::common::KeyStore< U, T >"
Simple class to store and retrieve keys. 
.PP
Definition at line 21 of file KeyStore.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class U , class T > \fBcryomesh::common::KeyStore\fP< U, T >::\fBKeyStore\fP ()\fC [inline]\fP"
.PP
Default constructor. 
.PP
Definition at line 27 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::it_null, cryomesh::common::KeyStore< U, T >::nullPair, and cryomesh::common::KeyStore< U, T >::objects.
.SS "template<class U , class T > virtual \fBcryomesh::common::KeyStore\fP< U, T >::~\fBKeyStore\fP ()\fC [inline, virtual]\fP"
.PP
Default destructor. 
.PP
Definition at line 36 of file KeyStore.h.
.SH "Member Function Documentation"
.PP 
.SS "template<class U , class T > void \fBcryomesh::common::KeyStore\fP< U, T >::add (const std::initializer_list< std::pair< U, T > > &list)\fC [inline]\fP"
.PP
Add an initialiser list of key/object pairs. \fBParameters:\fP
.RS 4
\fIstd::initializer_list<std::pair<U,T>\fP > Initialiser list of key/object pairs 
.RE
.PP

.PP
Definition at line 45 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::objects.
.PP
Referenced by cryomesh::common::KeyStore< U, T >::add().
.SS "template<class U , class T > void \fBcryomesh::common::KeyStore\fP< U, T >::add (const U &first, const T &second)\fC [inline]\fP"
.PP
Add a key/object pairs. \fBParameters:\fP
.RS 4
\fIstd::pair<U,T>\fP key/object pairs 
.RE
.PP

.PP
Definition at line 63 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::add().
.SS "template<class U , class T > virtual void \fBcryomesh::common::KeyStore\fP< U, T >::clear ()\fC [inline, virtual]\fP"
.PP
Clear all from store. 
.PP
Definition at line 129 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::objects.
.SS "template<class U , class T > virtual const std::map<U, T>::iterator \fBcryomesh::common::KeyStore\fP< U, T >::get (const U &key)\fC [inline, virtual]\fP"
.PP
Get iterator to key or null iterator otherwise. \fBParameters:\fP
.RS 4
\fIU\fP Key to search for 
.RE
.PP

.PP
Definition at line 109 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::getNullEntry(), and cryomesh::common::KeyStore< U, T >::objects.
.SS "template<class U , class T > virtual const std::map<U, T>::iterator \fBcryomesh::common::KeyStore\fP< U, T >::getNullEntry ()\fC [inline, virtual]\fP"
.PP
Get iteratorto null. 
.PP
Definition at line 122 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::it_null.
.PP
Referenced by cryomesh::common::KeyStore< U, T >::get().
.SS "template<class U , class T > void \fBcryomesh::common::KeyStore\fP< U, T >::remove (Ukey)\fC [inline]\fP"
.PP
Remove object from collection bt key. \fBParameters:\fP
.RS 4
\fIU\fP key The key of the object to be removed from the collection
.RE
.PP
\fBReturns:\fP
.RS 4
boost::shared_ptr<U> The object removed from the collection 
.RE
.PP

.PP
Definition at line 95 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::objects.
.SS "template<class U , class T > virtual void \fBcryomesh::common::KeyStore\fP< U, T >::remove (const std::initializer_list< U > &list)\fC [inline, virtual]\fP"
.PP
Remove objects from collection by initialiser list. \fBParameters:\fP
.RS 4
\fIstd::initializer_list<U\fP > obj The values to be removed from the collection 
.RE
.PP

.PP
Definition at line 73 of file KeyStore.h.
.SS "template<class U , class T > virtual size_t \fBcryomesh::common::KeyStore\fP< U, T >::size () const\fC [inline, virtual]\fP"
.PP
Return size. @ return size_t Size of stored items 
.PP
Definition at line 139 of file KeyStore.h.
.PP
References cryomesh::common::KeyStore< U, T >::objects.
.SH "Member Data Documentation"
.PP 
.SS "template<class U , class T > std::map<U, T>::iterator \fBcryomesh::common::KeyStore\fP< U, T >::\fBit_null\fP\fC [protected]\fP"
.PP
Definition at line 156 of file KeyStore.h.
.PP
Referenced by cryomesh::common::KeyStore< U, T >::getNullEntry(), and cryomesh::common::KeyStore< U, T >::KeyStore().
.SS "template<class U , class T > std::map<U, T> \fBcryomesh::common::KeyStore\fP< U, T >::\fBnullPair\fP\fC [protected]\fP"
.PP
Default null value entry. @ var std::map<U, T> 
.PP
Definition at line 149 of file KeyStore.h.
.PP
Referenced by cryomesh::common::KeyStore< U, T >::KeyStore().
.SS "template<class U , class T > std::map<U, T> \fBcryomesh::common::KeyStore\fP< U, T >::\fBobjects\fP\fC [private]\fP"
.PP
Definition at line 159 of file KeyStore.h.
.PP
Referenced by cryomesh::common::KeyStore< U, T >::add(), cryomesh::common::KeyStore< U, T >::clear(), cryomesh::common::KeyStore< U, T >::get(), cryomesh::common::KeyStore< U, T >::KeyStore(), cryomesh::common::KeyStore< U, T >::remove(), and cryomesh::common::KeyStore< U, T >::size().

.SH "Author"
.PP 
Generated automatically by Doxygen for cryomesh from the source code.
