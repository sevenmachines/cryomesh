.TH "cryomesh::state::ActivityPattern" 3 "Mon Mar 14 2011" "cryomesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cryomesh::state::ActivityPattern \- 
.PP
A simple collection of doubles representing a pattern of activities.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ActivityPattern.h>\fP
.PP
Inherits \fBSimpleCollection< double >\fP.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBActivityComparison\fP { \fBGreaterThan\fP, \fBLessThan\fP, \fBEqualTo\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBActivityPattern\fP ()"
.br
.ti -1c
.RI "virtual \fB~ActivityPattern\fP ()"
.br
.ti -1c
.RI "virtual std::string \fBtoPlusBooleanString\fP () const "
.br
.RI "\fIReturn a string of booleans representing with each element is > 0 or not. \fP"
.ti -1c
.RI "virtual std::list< bool > \fBtoPlusBooleanList\fP () const "
.br
.RI "\fIReturn a vector of booleans representing with each element > 0 or not. \fP"
.ti -1c
.RI "virtual void \fBclear\fP ()"
.br
.RI "\fIClear all objects from collection. \fP"
.ti -1c
.RI "virtual void \fBadd\fP (doubleobj)"
.br
.RI "\fIAdd object to collection. \fP"
.ti -1c
.RI "virtual void \fBadd\fP (const std::initializer_list< double > &list)"
.br
.RI "\fIAdd object to collection by initialiser list. \fP"
.ti -1c
.RI "virtual void \fBadd\fP (const std::list< double > &list)"
.br
.RI "\fIAdd object to collection by list. \fP"
.ti -1c
.RI "virtual void \fBremove\fP (doubleobj)"
.br
.RI "\fIRemove object from collection. \fP"
.ti -1c
.RI "virtual void \fBremove\fP (const std::initializer_list< double > &list)"
.br
.RI "\fIRemove objects from collection by initialiser list. \fP"
.ti -1c
.RI "virtual void \fBremove\fP (const std::list< double > &list)"
.br
.RI "\fIRemove objects from collection by list. \fP"
.ti -1c
.RI "virtual double \fBgetSum\fP () const"
.br
.ti -1c
.RI "virtual double \fBgetMaximum\fP () const"
.br
.ti -1c
.RI "virtual double \fBgetMinimum\fP () const"
.br
.ti -1c
.RI "virtual double \fBoperator[]\fP (unsigned index) const  throw (exceptions::IndexOutOfBoundsException)"
.br
.RI "\fIGet value at index. \fP"
.ti -1c
.RI "virtual SimpleCollection & \fBinvert\fP ()"
.br
.RI "\fIInvert collection. \fP"
.ti -1c
.RI "virtual SimpleCollection< double > & \fBreverse\fP ()"
.br
.RI "\fIReverse collection. \fP"
.ti -1c
.RI "virtual const std::list< double > & \fBgetCollection\fP () const"
.br
.RI "\fIGet underlying collection. \fP"
.ti -1c
.RI "virtual std::list< double > & \fBgetMutableCollection\fP ()"
.br
.RI "\fIGet mutable underlying collection. \fP"
.ti -1c
.RI "virtual int \fBgetSize\fP () const"
.br
.RI "\fIGet underlying collections size. \fP"
.ti -1c
.RI "virtual const SimpleCollection< double > \fBoperator+\fP (const SimpleCollection< double > &obj) const"
.br
.RI "\fINon-destructive addition operator. \fP"
.ti -1c
.RI "virtual SimpleCollection< double > & \fBoperator+=\fP (const SimpleCollection< double > &obj)"
.br
.RI "\fIDestructive addition and assignment operator. \fP"
.ti -1c
.RI "virtual bool \fBoperator==\fP (const SimpleCollection< double > &obj) const"
.br
.RI "\fIComparator operator. \fP"
.ti -1c
.RI "bool \fBoperator!=\fP (const SimpleCollection &obj) const"
.br
.RI "\fINot comparator operator. \fP"
.ti -1c
.RI "virtual bool \fBoperator!=\fP (const SimpleCollection< double > &obj) const =0"
.br
.RI "\fINot comparator operator. \fP"
.ti -1c
.RI "std::list< double > & \fBpad\fP (int front_pad, int back_pad, doublepad_value)"
.br
.RI "\fIPad Collection. \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "std::list< bool > \fBtoBooleanVector\fP (const double cuttoff, const \fBActivityComparison\fP compare) const "
.br
.ti -1c
.RI "double \fBgetBoundaryValue\fP (bool greater) const"
.br
.ti -1c
.RI "void \fBgenerateCurve\fP (const double max_y, const unsigned long length)"
.br
.RI "\fIGenerate a curve from boundary value. \fP"
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &out, const SimpleCollection &obj)"
.br
.RI "\fITo stream operator. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A simple collection of doubles representing a pattern of activities. 
.PP
Definition at line 20 of file ActivityPattern.h.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBcryomesh::state::ActivityPattern::ActivityComparison\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIGreaterThan \fP\fP
.TP
\fB\fILessThan \fP\fP
.TP
\fB\fIEqualTo \fP\fP

.PP
Definition at line 22 of file ActivityPattern.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "cryomesh::state::ActivityPattern::ActivityPattern ()"
.PP
Definition at line 19 of file ActivityPattern.cpp.
.SS "cryomesh::state::ActivityPattern::~ActivityPattern ()\fC [virtual]\fP"
.PP
Definition at line 23 of file ActivityPattern.cpp.
.SH "Member Function Documentation"
.PP 
.SS "virtual void \fBcryomesh::common::SimpleCollection\fP< double  >::add (doubleobj)\fC [inline, virtual, inherited]\fP"
.PP
Add object to collection. \fBParameters:\fP
.RS 4
\fIT\fP obj The value to be added to the collection
.RE
.PP
\fBReturns:\fP
.RS 4
T The value added to the collection 
.RE
.PP

.PP
Definition at line 80 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual void \fBcryomesh::common::SimpleCollection\fP< double  >::add (const std::initializer_list< double  > &list)\fC [inline, virtual, inherited]\fP"
.PP
Add object to collection by initialiser list. \fBParameters:\fP
.RS 4
\fIstd::initialiser_list<T>\fP obj The values to be added to the collection 
.RE
.PP

.PP
Definition at line 90 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::add().
.SS "virtual void \fBcryomesh::common::SimpleCollection\fP< double  >::add (const std::list< double  > &list)\fC [inline, virtual, inherited]\fP"
.PP
Add object to collection by list. \fBParameters:\fP
.RS 4
\fIstd::list<T>\fP list The list values to be added to the collection 
.RE
.PP

.PP
Definition at line 108 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::add().
.SS "virtual void \fBcryomesh::common::SimpleCollection\fP< double  >::clear ()\fC [inline, virtual, inherited]\fP"
.PP
Clear all objects from collection. 
.PP
Definition at line 66 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "void \fBcryomesh::common::SimpleCollection\fP< double  >::generateCurve (const doublemax_y, const unsigned longlength)\fC [inline, protected, inherited]\fP"
.PP
Generate a curve from boundary value. \fBParameters:\fP
.RS 4
\fIconst\fP int max_y Boundary value of curve 
.br
\fIconst\fP int length Length of Impulse 
.RE
.PP

.PP
Definition at line 537 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "double  \fBcryomesh::common::SimpleCollection\fP< double  >::getBoundaryValue (boolgreater) const\fC [inline, protected, inherited]\fP"
.PP
Definition at line 500 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual const std::list<double >& \fBcryomesh::common::SimpleCollection\fP< double  >::getCollection () const\fC [inline, virtual, inherited]\fP"
.PP
Get underlying collection. \fBReturns:\fP
.RS 4
const std::list<T> & The collection 
.RE
.PP

.PP
Definition at line 298 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual double  \fBcryomesh::common::SimpleCollection\fP< double  >::getMaximum () const\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 205 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::getBoundaryValue().
.SS "virtual double  \fBcryomesh::common::SimpleCollection\fP< double  >::getMinimum () const\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 215 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::getBoundaryValue().
.SS "virtual std::list<double >& \fBcryomesh::common::SimpleCollection\fP< double  >::getMutableCollection ()\fC [inline, virtual, inherited]\fP"
.PP
Get mutable underlying collection. \fBReturns:\fP
.RS 4
std::list<T> & The mutable collection 
.RE
.PP

.PP
Definition at line 308 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual int \fBcryomesh::common::SimpleCollection\fP< double  >::getSize () const\fC [inline, virtual, inherited]\fP"
.PP
Get underlying collections size. \fBReturns:\fP
.RS 4
int The collections size 
.RE
.PP

.PP
Definition at line 318 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual double  \fBcryomesh::common::SimpleCollection\fP< double  >::getSum () const\fC [inline, virtual, inherited]\fP"
.PP
Definition at line 185 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual SimpleCollection& \fBcryomesh::common::SimpleCollection\fP< double  >::invert ()\fC [inline, virtual, inherited]\fP"
.PP
Invert collection. Reflect the collection in the x axis
.PP
\fBReturns:\fP
.RS 4
SimpleCollection & The inverted object 
.RE
.PP

.PP
Reimplemented in \fBcryomesh::components::Impulse\fP.
.PP
Definition at line 264 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "bool \fBcryomesh::common::SimpleCollection\fP< double  >::operator!= (const \fBSimpleCollection\fP< double > &obj) const\fC [inline, inherited]\fP"
.PP
Not comparator operator. \fBParameters:\fP
.RS 4
\fIconst\fP SimpleCollection & obj RHS object
.RE
.PP
\fBReturns:\fP
.RS 4
bool True if not equal, false otherwise 
.RE
.PP

.PP
Definition at line 432 of file SimpleCollection.h.
.SS "virtual bool \fBcryomesh::common::ICollection\fP< SimpleCollection< double >  >::operator!= (const \fBSimpleCollection\fP< double >  &obj) const\fC [pure virtual, inherited]\fP"
.PP
Not comparator operator. \fBParameters:\fP
.RS 4
\fIconst\fP T & obj RHS object
.RE
.PP
\fBReturns:\fP
.RS 4
bool True if not equal, false otherwise 
.RE
.PP

.SS "virtual const SimpleCollection<double > \fBcryomesh::common::SimpleCollection\fP< double  >::operator+ (const \fBSimpleCollection\fP< double  > &obj) const\fC [inline, virtual, inherited]\fP"
.PP
Non-destructive addition operator. \fBParameters:\fP
.RS 4
\fIconst\fP SimpleCollection<T> & obj RHS addition
.RE
.PP
\fBReturns:\fP
.RS 4
SimpleCollection<T> New object after addition 
.RE
.PP

.PP
Implements \fBcryomesh::common::ICollection< SimpleCollection< double > >\fP.
.PP
Definition at line 331 of file SimpleCollection.h.
.SS "virtual SimpleCollection<double >& \fBcryomesh::common::SimpleCollection\fP< double  >::operator+= (const \fBSimpleCollection\fP< double  > &obj)\fC [inline, virtual, inherited]\fP"
.PP
Destructive addition and assignment operator. \fBParameters:\fP
.RS 4
\fIconst\fP SimpleCollection<T> & obj RHS addition
.RE
.PP
\fBReturns:\fP
.RS 4
SimpleCollection<T> & This object after addition and assignment 
.RE
.PP

.PP
Implements \fBcryomesh::common::ICollection< SimpleCollection< double > >\fP.
.PP
Definition at line 346 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::getCollection(), and cryomesh::common::SimpleCollection< T >::getMutableCollection().
.SS "virtual bool \fBcryomesh::common::SimpleCollection\fP< double  >::operator== (const \fBSimpleCollection\fP< double  > &obj) const\fC [inline, virtual, inherited]\fP"
.PP
Comparator operator. \fBParameters:\fP
.RS 4
\fIconst\fP SimpleCollection<T> & obj RHS object
.RE
.PP
\fBReturns:\fP
.RS 4
bool True if equal, false otherwise 
.RE
.PP

.PP
Implements \fBcryomesh::common::ICollection< SimpleCollection< double > >\fP.
.PP
Definition at line 390 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::getCollection(), and cryomesh::common::Containers::print().
.SS "virtual double  \fBcryomesh::common::SimpleCollection\fP< double  >::operator[] (unsignedindex) const  throw (exceptions::IndexOutOfBoundsException)\fC [inline, virtual, inherited]\fP"
.PP
Get value at index. \fBParameters:\fP
.RS 4
\fIunsigned\fP index Index to return
.RE
.PP
\fBReturns:\fP
.RS 4
T Value at index, 0 if out of bounds 
.RE
.PP

.PP
Definition at line 228 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::getSize(), and cryomesh::common::SimpleCollection< T >::objects.
.SS "std::list<double >& \fBcryomesh::common::SimpleCollection\fP< double  >::pad (intfront_pad, intback_pad, doublepad_value)\fC [inline, inherited]\fP"
.PP
Pad Collection. \fBParameters:\fP
.RS 4
\fIint\fP front_pad Amount of places to pad to front 
.br
\fIint\fP back_pad Amount of places to pad to back 
.br
\fIT\fP & obj Object to use for pad
.RE
.PP
\fBReturns:\fP
.RS 4
T & Return the collection 
.RE
.PP

.PP
Definition at line 475 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual void \fBcryomesh::common::SimpleCollection\fP< double  >::remove (const std::list< double  > &list)\fC [inline, virtual, inherited]\fP"
.PP
Remove objects from collection by list. \fBParameters:\fP
.RS 4
\fIstd::list<T>\fP list The list values to be removed to the collection 
.RE
.PP

.PP
Definition at line 167 of file SimpleCollection.h.
.SS "virtual void \fBcryomesh::common::SimpleCollection\fP< double  >::remove (doubleobj)\fC [inline, virtual, inherited]\fP"
.PP
Remove object from collection. \fBParameters:\fP
.RS 4
\fIT\fP obj The object to be removed from the collection 
.RE
.PP

.PP
Definition at line 126 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects.
.SS "virtual void \fBcryomesh::common::SimpleCollection\fP< double  >::remove (const std::initializer_list< double  > &list)\fC [inline, virtual, inherited]\fP"
.PP
Remove objects from collection by initialiser list. \fBParameters:\fP
.RS 4
\fIstd::initialiser_list<T>\fP obj The values to be removed from the collection 
.RE
.PP

.PP
Definition at line 149 of file SimpleCollection.h.
.SS "virtual SimpleCollection<double >& \fBcryomesh::common::SimpleCollection\fP< double  >::reverse ()\fC [inline, virtual, inherited]\fP"
.PP
Reverse collection. Reflect the collection in the y axis
.PP
\fBReturns:\fP
.RS 4
SimpleCollection<T> & The inverted object 
.RE
.PP

.PP
Definition at line 285 of file SimpleCollection.h.
.PP
References cryomesh::common::SimpleCollection< T >::objects, and cryomesh::common::SimpleCollection< T >::reverse().
.SS "std::list< bool > cryomesh::state::ActivityPattern::toBooleanVector (const doublecuttoff, const \fBActivityComparison\fPcompare) const\fC [protected]\fP"
.PP
Definition at line 36 of file ActivityPattern.cpp.
.SS "std::list< bool > cryomesh::state::ActivityPattern::toPlusBooleanList () const\fC [virtual]\fP"
.PP
Return a vector of booleans representing with each element > 0 or not. \fBReturns:\fP
.RS 4
std::vector<bool> The vector of booleans 
.RE
.PP

.PP
Definition at line 32 of file ActivityPattern.cpp.
.SS "std::string cryomesh::state::ActivityPattern::toPlusBooleanString () const\fC [virtual]\fP"
.PP
Return a string of booleans representing with each element is > 0 or not. \fBReturns:\fP
.RS 4
std::string The string of booleans 
.RE
.PP

.PP
Definition at line 26 of file ActivityPattern.cpp.
.SH "Friends And Related Function Documentation"
.PP 
.SS "std::ostream& operator<< (std::ostream &out, const \fBSimpleCollection\fP< double > &obj)\fC [friend, inherited]\fP"
.PP
To stream operator. \fBParameters:\fP
.RS 4
\fIstd::ostream\fP & out The output stream 
.br
\fIconst\fP SimpleCollection & obj The object to stream
.RE
.PP
\fBReturns:\fP
.RS 4
std::ostream & The output stream 
.RE
.PP

.PP
Definition at line 447 of file SimpleCollection.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for cryomesh from the source code.
