.TH "cryomesh::components::Connection" 3 "Mon Mar 14 2011" "cryomesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
cryomesh::components::Connection \- 
.PP
\fBConnection\fP class to manage the transfer of Impulses between Nodes.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Connection.h>\fP
.PP
Inherits \fBcryomesh::common::Tagged\fP.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBConnection\fP ()"
.br
.RI "\fIConstructor for \fBConnection\fP. \fP"
.ti -1c
.RI "virtual \fB~Connection\fP ()"
.br
.RI "\fIDestructor for \fBConnection\fP. \fP"
.ti -1c
.RI "virtual void \fBupdate\fP ()"
.br
.RI "\fIUpdate the \fBConnection\fP. \fP"
.ti -1c
.RI "virtual const \fBcommon::Connector\fP< \fBConnection\fP, \fBNode\fP > & \fBgetConnector\fP () const "
.br
.RI "\fIGet the Connector object for this \fBConnection\fP. \fP"
.ti -1c
.RI "virtual \fBcommon::Connector\fP< \fBConnection\fP, \fBNode\fP > & \fBgetMutableConnector\fP ()"
.br
.RI "\fIGet the mutable Connector object for this \fBConnection\fP. \fP"
.ti -1c
.RI "boost::shared_ptr< \fBImpulse\fP > \fBadd\fP (boost::shared_ptr< \fBImpulse\fP > impulse)"
.br
.RI "\fIAdd an \fBImpulse\fP to this connection. \fP"
.ti -1c
.RI "boost::shared_ptr< \fBImpulse\fP > \fBremove\fP (boost::shared_ptr< \fBImpulse\fP > impulse)"
.br
.RI "\fIAdd an \fBImpulse\fP to this connection. \fP"
.ti -1c
.RI "boost::shared_ptr< \fBImpulse\fP > \fBremove\fP (\fBImpulse\fP &impulse)"
.br
.RI "\fIRemove an \fBImpulse\fP from this connection. \fP"
.ti -1c
.RI "const \fBImpulseCollection\fP & \fBgetImpulses\fP () const "
.br
.RI "\fIGet the impulse collection. \fP"
.ti -1c
.RI "\fBImpulseCollection\fP & \fBgetMutableImpulses\fP ()"
.br
.RI "\fIGet the mutable impulse collection. \fP"
.ti -1c
.RI "const boost::shared_ptr< \fBcomponents::ActivityTimerDistance\fP > \fBgetActivityTimer\fP () const "
.br
.RI "\fIGet active impulse collection. \fP"
.ti -1c
.RI "boost::shared_ptr< \fBcomponents::ActivityTimerDistance\fP > \fBgetMutableActivityTimer\fP ()"
.br
.RI "\fIThe get mutable activity timer for this object. \fP"
.ti -1c
.RI "void \fBupdatePosition\fP ()"
.br
.RI "\fIUpdate position. \fP"
.ti -1c
.RI "boost::uuids::uuid \fBgetUUID\fP () const "
.br
.RI "\fIGet the uuid of object. \fP"
.ti -1c
.RI "boost::uuids::uuid \fBgetKey\fP () const "
.br
.RI "\fIGet the key of object. \fP"
.ti -1c
.RI "boost::uuids::uuid \fBgetTag\fP () const "
.br
.RI "\fIGet the tag of object. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "boost::shared_ptr< \fBcommon::Connector\fP< \fBConnection\fP, \fBNode\fP > > \fBconnector\fP"
.br
.ti -1c
.RI "\fBImpulseCollection\fP \fBimpulses\fP"
.br
.ti -1c
.RI "boost::shared_ptr< \fBcomponents::ActivityTimerDistance\fP > \fBactivityTimer\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "std::ostream & \fBoperator<<\fP (std::ostream &os, const \fBConnection\fP &obj)"
.br
.RI "\fITo stream operator. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBConnection\fP class to manage the transfer of Impulses between Nodes. 

A \fBConnection\fP represents the 'journey' made by Impulses as they travel between a start \fBNode\fP and an end \fBNode\fP. They can be spatially based or more abstract representations of this journey. As each clock moment passes Impulses are propagated in some way 'closer' to their end \fBNode\fP. Impulses can be altered by the \fBMesh\fP on each cycle. When Impulses reach the 'end' of their journey they are passed to the end \fBNode\fP for accumulation. Connections can also be bi-directional, an \fBImpulse\fP from a start \fBNode\fP could be in some way 'reflected' back to that node. Perhaps once in a 'weighted' reflection to be accumulated by the start \fBNode\fP, or even in a constant per-cycle reflection as the original \fBImpulse\fP 'moves along' the \fBConnection\fP 
.PP
Definition at line 35 of file Connection.h.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "cryomesh::components::Connection::Connection ()"
.PP
Constructor for \fBConnection\fP. Constructor 
.PP
Definition at line 15 of file Connection.cpp.
.SS "cryomesh::components::Connection::~Connection ()\fC [virtual]\fP"
.PP
Destructor for \fBConnection\fP. Destructor 
.PP
Definition at line 20 of file Connection.cpp.
.SH "Member Function Documentation"
.PP 
.SS "boost::shared_ptr< \fBImpulse\fP > cryomesh::components::Connection::add (boost::shared_ptr< \fBImpulse\fP >impulse)"
.PP
Add an \fBImpulse\fP to this connection. \fBParameters:\fP
.RS 4
\fIboost::shared_ptr<Impulse>\fP impulse The \fBImpulse\fP to add
.RE
.PP
\fBReturns:\fP
.RS 4
boost::shared_ptr<Impulse> The \fBImpulse\fP added, null if none added 
.RE
.PP

.PP
Definition at line 58 of file Connection.cpp.
.SS "const boost::shared_ptr< \fBcomponents::ActivityTimerDistance\fP > cryomesh::components::Connection::getActivityTimer () const"
.PP
Get active impulse collection. const ActiveImpulseCollection & Connection::getActiveImpulses() const { return this->activeImpulses; }
.PP
\fBReturns:\fP
.RS 4
ActiveImpulseCollection & The collection of active impulses
.RE
.PP
const ActiveImpulseCollection & getActiveImpulses() const;
.PP
/** Get mutable active impulse collection
.PP
\fBReturns:\fP
.RS 4
ActiveImpulseCollection & The collection of active impulses
.RE
.PP
\fBImpulseCollection\fP & getActiveImpulses(); The get activity timer for this object
.PP
\fBReturns:\fP
.RS 4
boost::shared_ptr<ActivityTimer>
.RE
.PP
ActiveImpulseCollection & Connection::getMutableActiveImpulses() { return this->activeImpulses; } 
.PP
Definition at line 90 of file Connection.cpp.
.SS "const \fBcommon::Connector\fP< \fBConnection\fP, \fBNode\fP > & cryomesh::components::Connection::getConnector () const\fC [virtual]\fP"
.PP
Get the Connector object for this \fBConnection\fP. \fBReturns:\fP
.RS 4
common::Connector<Connection, Node> The connector for this \fBConnection\fP 
.RE
.PP

.PP
Definition at line 50 of file Connection.cpp.
.SS "const \fBImpulseCollection\fP & cryomesh::components::Connection::getImpulses () const"
.PP
Get the impulse collection. \fBReturns:\fP
.RS 4
const \fBImpulseCollection\fP & The impulse collection 
.RE
.PP

.PP
Definition at line 72 of file Connection.cpp.
.SS "boost::uuids::uuid cryomesh::common::Tagged::getKey () const\fC [inline, inherited]\fP"
.PP
Get the key of object. \fBReturns:\fP
.RS 4
boost::uuids::uuid The unique uuid tag of this object 
.RE
.PP

.PP
Definition at line 61 of file Tagged.h.
.PP
References cryomesh::common::Tagged::getUUID().
.SS "boost::shared_ptr< \fBcomponents::ActivityTimerDistance\fP > cryomesh::components::Connection::getMutableActivityTimer ()"
.PP
The get mutable activity timer for this object. \fBReturns:\fP
.RS 4
boost::shared_ptr<ActivityTimer> 
.RE
.PP

.PP
Definition at line 94 of file Connection.cpp.
.SS "\fBcommon::Connector\fP< \fBConnection\fP, \fBNode\fP > & cryomesh::components::Connection::getMutableConnector ()\fC [virtual]\fP"
.PP
Get the mutable Connector object for this \fBConnection\fP. \fBReturns:\fP
.RS 4
common::Connector<Connection, Node> The connector for this \fBConnection\fP 
.RE
.PP

.PP
Definition at line 54 of file Connection.cpp.
.SS "\fBImpulseCollection\fP & cryomesh::components::Connection::getMutableImpulses ()"
.PP
Get the mutable impulse collection. \fBReturns:\fP
.RS 4
\fBImpulseCollection\fP & The mutable impulse collection 
.RE
.PP

.PP
Definition at line 76 of file Connection.cpp.
.SS "boost::uuids::uuid cryomesh::common::Tagged::getTag () const\fC [inline, inherited]\fP"
.PP
Get the tag of object. \fBReturns:\fP
.RS 4
boost::uuids::uuid The unique uuid tag of this object 
.RE
.PP

.PP
Definition at line 71 of file Tagged.h.
.PP
References cryomesh::common::Tagged::getUUID().
.SS "boost::uuids::uuid cryomesh::common::Tagged::getUUID () const\fC [inline, inherited]\fP"
.PP
Get the uuid of object. \fBReturns:\fP
.RS 4
boost::uuids::uuid The unique uuid tag of this object 
.RE
.PP

.PP
Definition at line 51 of file Tagged.h.
.PP
References cryomesh::common::Tagged::uuid.
.PP
Referenced by cryomesh::common::Tagged::getKey(), and cryomesh::common::Tagged::getTag().
.SS "boost::shared_ptr< \fBImpulse\fP > cryomesh::components::Connection::remove (\fBImpulse\fP &impulse)"
.PP
Remove an \fBImpulse\fP from this connection. \fBParameters:\fP
.RS 4
\fI\fBImpulse\fP\fP & impulse The impulse to remove
.RE
.PP
\fBReturns:\fP
.RS 4
boost::shared_ptr<Impulse> The \fBImpulse\fP removed, null if none removed 
.RE
.PP

.PP
Definition at line 68 of file Connection.cpp.
.SS "boost::shared_ptr< \fBImpulse\fP > cryomesh::components::Connection::remove (boost::shared_ptr< \fBImpulse\fP >impulse)"
.PP
Add an \fBImpulse\fP to this connection. \fBParameters:\fP
.RS 4
\fI\fBImpulse\fP\fP & impulse The \fBImpulse\fP to add
.RE
.PP
\fBReturns:\fP
.RS 4
boost::shared_ptr<Impulse> The \fBImpulse\fP added, null if none added boost::shared_ptr<Impulse> add(Impulse & impulse); Remove an \fBImpulse\fP from this connection
.RE
.PP
\fBParameters:\fP
.RS 4
\fIboost::shared_ptr<Impulse>\fP impulse The impulse to remove
.RE
.PP
\fBReturns:\fP
.RS 4
boost::shared_ptr<Impulse> The \fBImpulse\fP removed, null if none removed 
.RE
.PP

.PP
Definition at line 64 of file Connection.cpp.
.SS "void cryomesh::components::Connection::update ()\fC [virtual]\fP"
.PP
Update the \fBConnection\fP. Update our collection of impulses. If any reach the 'endpoint' of the connection then pass them on to our end Nodes 
.PP
Definition at line 23 of file Connection.cpp.
.PP
References connector.
.SS "void cryomesh::components::Connection::updatePosition ()"
.PP
Update position. 
.PP
Definition at line 98 of file Connection.cpp.
.PP
References activityTimer, and cryomesh::spacial::Point::getDistance().
.SH "Friends And Related Function Documentation"
.PP 
.SS "std::ostream& operator<< (std::ostream &os, const \fBConnection\fP &obj)\fC [friend]\fP"
.PP
To stream operator. \fBParameters:\fP
.RS 4
\fIstd::ostream\fP & os The output stream 
.br
\fIconst\fP \fBConnection\fP & obj The object to stream
.RE
.PP
\fBReturns:\fP
.RS 4
std::ostream & The output stream 
.RE
.PP

.PP
Definition at line 111 of file Connection.cpp.
.SH "Member Data Documentation"
.PP 
.SS "boost::shared_ptr<\fBcomponents::ActivityTimerDistance\fP> \fBcryomesh::components::Connection::activityTimer\fP\fC [protected]\fP"
.PP
Definition at line 207 of file Connection.h.
.PP
Referenced by updatePosition().
.SS "boost::shared_ptr<\fBcommon::Connector\fP<\fBConnection\fP, \fBNode\fP> > \fBcryomesh::components::Connection::connector\fP\fC [protected]\fP"
.PP
Definition at line 193 of file Connection.h.
.PP
Referenced by update().
.SS "\fBImpulseCollection\fP \fBcryomesh::components::Connection::impulses\fP\fC [protected]\fP"
.PP
Definition at line 200 of file Connection.h.

.SH "Author"
.PP 
Generated automatically by Doxygen for cryomesh from the source code.
