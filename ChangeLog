2011-05-09  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/ActivityTimerDistance.cpp (ActivityTimerDistance::getRandom): use random distance and min/max decrement fraction to get actual decrement max/min values

2011-05-04  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/ActivityTimerDistance.cpp (ActivityTimerDistance::getRandom): set decrement to 1 and not random

2011-04-21  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/structures/Cluster.cpp (Cluster::createConnection): Dont self connect nodes if they fall below fraction

2011-04-20  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/Node.cpp (Node::randomise): make more likel to get positive impulse

2011-04-13  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/manager/CryoManager.h (CryoManager.runCycle): Run one cycle

2011-04-07  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/Impulse.cpp (Impulse::setFirstActiveCycle): Now has built in delay automatically added

2011-04-06  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/manager/TableFormats.h (OutputPatternsTableFormat):  new for  out patterns
	(InputPatternsTableFormat): new for  in patterns
	* src/manager/DatabaseManager.cpp (DatabaseManager::insertOutputPattern): new insert for  out patterns
	* src/manager/PatternDatabaseObject.h (PatternDatabaseObject): New object to handle patterns in the database
	* src/state/Pattern.cpp (Pattern::getDatabaseObject): added database object support to patterns
	* src/utilities/SequencerChannels.cpp (SequencerChannels::readSequences): force passing pattern channels by reference otherwise we lose uuids when we copy pass
	* src/structures/Cluster.cpp (Cluster::getLiveNodeCount):  Get the total live nodes in this cluster currently
	(Cluster::getActiveNodeCount): Get the total active nodes in this cluster currently
	(Cluster::getTriggeredNodeCount): Get the total fired nodes in this cluster currently
	* src/structures/Bundle.cpp (Bundle::checkFibreStructure): Test fibre structure
	(Bundle::checkChannelStructure): TODO
	(Bundle::checkStructure): Test overall structure
	* src/structures/Fibre.cpp (Fibre::countConnections): Count all connections of this fibre to a group of clusters

2011-04-02  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/Impulse.cpp (Impulse::getTriggerImpulse): Set delay to 1 so trigger will fire on next update
2011-04-01  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/structures/Fibre.cpp (Fibre::getInputNodesPattern): Generate pattern from the input nodes of the connections in a fibre
	(Fibre::getInputNodesPattern): fix bug, get inputs to connections not outputs
	* src/manager/Creator.cpp (Creator::checkConfigStructure): Simple check for some essential  commands
	* src/structures/Bundle.cpp (Bundle::connectCluster): add fibres to input/output collections instead of general fibre collection
	(Bundle::connectCluster): Ignore but warn on other fibre types we dont like. You cant connect an intermediate fibre to just one cluster
	(Bundle::getPrimaryInputFibreByChannel): Helper to get primary fibre by channel
	(Bundle::getPrimaryOutputFibreByChannel): Helper to get primary fibre by channel
	(Bundle::getPrimaryInputChannelByFibre): Helper to get primary channel by fibre
	(Bundle::getPrimaryOutputChannelByFibre): Helper to get primary channel by fibre
	(Bundle::getPrimaryFibreByChannel): Use the channel id to get a mapping to a fibre id, and the supplied map to get an actual pointer to the fibre
	(Bundle::getPrimaryChannelByFibre): Use the fibre id to get a mapping to a channel id, and the supplied map to get an actual pointer to the channel

2011-03-31  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/structures/Bundle.cpp (Bundle::connectPrimaryOutputCluster): Get width from pattern channel, not from method args
	(Bundle::connectPrimaryInputCluster):  Get width from pattern channel, not from method args
	* src/manager/Creator.cpp (Creator::getAcceptedCommandList): remove set-primary- functionality, connect crerated channels to clusters instead. 
	(Creator::createFromConfig): Primary fibres are only created from data files now and can only connect pre-existing fibres in the config
	* src/structures/Bundle.h (Bundle.inputChannelsMap):  hold all input pattern channels
	(Bundle.outputChannelsMap): hold all output pattern channels
	(Bundle.inputFibres): Special seperate fibremap for input fibres
	(Bundle.outputFibres): Special seperate fibremap for output fibres
	* src/state/PatternChannelMap.h: KeyMappedCollection for PatternChannels

2011-03-30  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/manager/Creator.cpp (Creator::analyseConfig): perform a full config file check for coherence
	(Creator::checkConfigEntry): check an entry is an acceptable command and has the right options
	(Creator::checkConfigStructure): check overall config structure

2011-03-24  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/manager/CryoManager.h (CryoManager): Need to declare and define methods used by servers function pointers or else they will be undefined

2011-03-18  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/manager/NodeDatabaseObject.cpp (NodeDatabaseObject::NodeDatabaseObject): implemented
	* src/manager/ConnectionDatabaseObject.cpp (ConnectionDatabaseObject::ConnectionDatabaseObject): implemented
	* src/manager/DatabaseObject.h (DatabaseObject.getColumnMapFromEntry): Generate a map of key/values from a database entry
	* src/manager/DatabaseManager.cpp (DatabaseManager::selectConnection): Select a unique connection row
	(DatabaseManager::selectNode): Select a unique node row

2011-03-17  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/manager/DatabaseManager.h (DatabaseManager): update/select/delete added

2011-03-16  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/manager/ConnectionDatabaseObject.cpp (ConnectionDatabaseObject::ConnectionDatabaseObject): Create database object from database entry
	* src/manager/ConnectionDatabaseObject.h (ConnectionDatabaseObject): add get/sets
	* src/manager/NodeDatabaseObject.h (NodeDatabaseObject): Add get/sets
	* src/manager/NodeDatabaseObject.cpp (NodeDatabaseObject::NodeDatabaseObject): change to use cycle and not unsigned int
	* src/common/Containers.h (Containers): deleteByComparison: delete from multimap by comparison
	* src/common/Cycle.cpp (Cycle::Cycle): switch from unsigned to signed, ie, allow negative cycles
	(Cycle::operator -): return the temporary not *this
	* src/manager/DatabaseManager.h (DatabaseManager.ConnectionTableFormat): set connections table format
	(DatabaseManager.ConnectionTableFormat): make  id and cycle not null
	(DatabaseManager.NodeTableFormat):  make id and cycle not null
	* src/components/Connection.cpp (Connection::getDatabaseObject): return a database object
	(Connection::getDatabaseObject): Fix when inputs/outputs are null

2011-03-15  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/Tagged.h (Tagged): Deprecate all int ids
	* src/components/Node.cpp (Node::getDatabaseObject): Use uuid string for database object id
	* src/manager/NodeDatabaseObject.h (NodeDatabaseObject.NodeDatabaseObject): Use uuid string version for id

2011-03-11  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/Debuggable.h (Debuggable): Simple class to enable debugging on a subclass
	(Debuggable): get debug status
	* src/components/Impulse.h (Impulse): Default start cycle to 0 on creation, this will effectively become the delay

2011-03-08  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/Connection.cpp (Connection::Connection): connections only have one input and one output
	* src/common/Connector.h (Connector): Force a maximum inputs and outputs, default to any number

2011-03-05  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/Node.cpp (Node::addImpulses): pass to single this->addImpulse
	(Node::addImpulse): Make impulse start into current start+now cycle

2011-03-04  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/structures/Bundle.cpp (Bundle::update): Now updates time
	* src/state/Pattern.cpp (Pattern::getRandom): random pattern generator
	* src/common/Maths.h (Maths.getRandomBool): Random bool generator
	* src/components/Node.cpp (operator <<): added print stream
	* src/components/NodeMap.h (NodeMap.operator <<): added print stream

2011-03-03  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/dataobjects/DataObjectController.h (getMap): Allow refreshing by subclasses
	(getDataObject):  Allow refreshing by subclasses
	* src/components/Connection.h (Connection): Use data objects 
	* src/components/Node.h (Node): Now is a DataObject

2011-02-07  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/TimeKeeper.cpp (TimeKeeper::reset): Allow TimeKeeper reset, zero the clock
	* src/components/Impulse.cpp (Impulse::Impulse): Add start cycle constructor param, with default of now
	(Impulse::isActive): check i active on a cycle

2011-02-05  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/SimpleCollection.h (SimpleCollection): Added initialiser list and list add/remove functions 

2011-02-04  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/Connector.h (Connector): added connect and disconnect collection and initialiser list versions

2011-02-03  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/Node.h (Node): Started implementation

2011-02-02  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/Cycle.h (Cycle): More operators, proper use of mpz's
	* src/common/Cycle.cpp (Cycle::Cycle): Remove to get rid of mpz_t/unsigned int constructor ambiguity
	* src/components/Impulse.cpp (Impulse::Impulse): No need to set first/last activity, default is zero for cycles
	(Impulse::operator +=): Fixed merge addition

2011-02-01  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/Cycle.h (Cycle): Move Cycle to its own class
	* src/common/SimpleCollection.h (generateCurve): Make start and end active points, zeros are now beyond collection endpoints
	* src/components/Impulse.cpp (Impulse::randomise): Make sure have at least a min length 
	(Impulse::getActivity): Index starts at 1
	(Impulse::Impulse): Force min activity length on construction
	(Impulse::MIN_ACTIVITY_LENGTH): Must have at least length 1 to have at least one non zero value
	(Impulse::operator ==): delta compare on doubles, not exact
	* src/components/ImpulseCollection.cpp (ImpulseCollection::clearCycles): Make match interval [start, end), ie, closed start but open end

2011-01-31  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/Containers.h (Containers): Add containers together
	(Containers): add(lhs, rhs) function
	(Containers): add(lhs, rhs) function, const version 
	(Containers.compare): added
	* src/common/SimpleCollection.h (operator +): added
	(operator +=): added
	(operator =): added
	(operator ==): added
	(operator <<): added
	* src/components/Impulse.cpp (Impulse::operator +): added
	* src/components/ImpulseCollection.cpp (ImpulseCollection::operator =): added
	(ImpulseCollection::operator +=): added
	(ImpulseCollection::operator +): added
	(ImpulseCollection::operator ==): added
	* src/common/Maths.h (Maths.compareDoubles): Compare doubles using a delta value
	* src/common/KeyMappedCollection.h: Move to protected to allow superclass access

2011-01-28  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/SimpleCollection.h (operator []): Allow array operator lookup
	(invert): Reflect the collection in the x axis
	(reverse): Reflect the collection in the y axis
	
	* src/common/exceptions/IndexOutOfBoundsException.h (IndexOutOfBoundsException): New class for index out of bounds collection lookups

2011-01-27  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/KeyMappedCollection.h: Refactor to KeyMappedCollection.h

2011-01-26  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/ImpulseCollection.h: Added clear by cycle and clear by activity functionality 
	* src/components/Impulse.h: Added accessors for start and finish cycle and max and min activity
	
2011-01-24  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/components/Impulse.h:  Added Doxygen comments
	* src/common/Connector.h: Added Doxygen comments

2011-01-19  SevenMachines  <SevenMachines@yahoo.co.uk>

	* src/common/Connector.h: Template class implemented for connectable objects
	* src/components/Node.cpp (Node::Node): Initial declarations